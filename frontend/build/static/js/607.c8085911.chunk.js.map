{"version":3,"file":"static/js/607.c8085911.chunk.js","mappings":"0QAIA,SAASA,EAAkBC,EAAQC,EAAWC,GAC1C,IAC4B,EADtBC,EAAWF,EAAUC,QACVE,IAAbD,IACAH,EAAOE,IAAmB,QAAZ,EAACF,EAAOE,UAAI,QAFkB,GAEEC,EAEtD,CACA,SAASE,EAASC,EAAQC,GAA0B,IAAnBC,EAAY,UAAH,8CACtC,GAAKD,EAAL,CAGA,IAAME,EAAUH,EAChB,GAAKG,EAAL,CAGA,IAAMC,EAAeD,EAAQF,MAC7B,GAAKG,EAGL,IAAK,IAAMR,KAAOK,EAAO,CACrB,IAAMI,EAAQJ,EAAML,GACfS,GAGLD,EAAaE,YAAYV,EAAKS,EAAOH,EAAY,YAAc,GACnE,CAXA,CAJA,CAgBJ,CACO,IAAMK,EAAM,WACf,WAAYC,GAAW,2BACnBC,KAAKD,UAAYA,EACjBC,KAAKC,uBAAyB,SAACC,GAAa,IACI,EADJ,UAClB,EAAKC,mBAAiB,IAA5C,IAAK,EAAL,qBAA8C,OAAnCC,EAAO,QACG,QAAjB,EAAAA,EAAQC,iBAAS,OAAjB,OAAAD,EAAoBF,EACxB,CAAC,+BACL,EACAF,KAAKM,sBAAwB,SAACC,EAAKL,EAAUM,EAAQC,EAAUC,EAAaC,GAAc,IAC3C,EAD2C,UAChE,EAAKC,kBAAgB,IAA3C,IAAK,EAAL,qBAA6C,OAAlCR,EAAO,QACd,GAAIA,EAAQS,eAAgB,CACxB,MAAyBT,EAAQS,eAAeX,EAAUK,EAAKC,EAAQC,GAA/DK,EAAI,EAAJA,KAAMC,EAAM,EAANA,OACVD,IACAJ,EAAYI,KAAOA,GAEnBC,IACAL,EAAYK,OAASA,EAE7B,CACA,GAAIX,EAAQY,mBAAoB,CAC5B,IAAMC,EAAmBb,EAAQY,mBAAmBd,GACpD,IAAK,IAAMf,KAAO8B,EACdjC,EAAkB2B,EAAWM,EAAkB9B,EAEvD,CACkB,QAAlB,EAAAiB,EAAQc,kBAAU,OAAlB,OAAAd,EAAqBF,EACzB,CAAC,+BACL,EACAF,KAAKmB,oBAAsB,WAAM,IACW,EADX,UACR,EAAKC,gBAAc,IAAxC,IAAK,EAAL,qBAA0C,OAA/BC,EAAM,QACA,QAAb,EAAAA,EAAOC,cAAM,OAAb,OAAAD,EACJ,CAAC,+BACL,EACArB,KAAKuB,yBAA2B,SAACrB,GAC7B,IAAIsB,EAAQC,EAC2B,EADpB,UACE,EAAKC,eAAa,IAAvC,IAAK,EAAL,qBAAyC,KAA9BL,EAAM,QAOb,IANKG,GAAUH,EAAOM,oBAClBH,GAASI,EAAAA,EAAAA,IAAgBP,EAAOM,kBAAkBzB,MAEjDuB,GAAUJ,EAAOQ,sBAClBJ,GAASG,EAAAA,EAAAA,IAAgBP,EAAOQ,oBAAoB3B,KAEpDsB,GAAUC,EACV,KAER,CAAC,+BACD,MAAO,CAACD,EAAQC,EACpB,EACAzB,KAAK8B,YAAU,uBAAG,iGACyF,GAAjGC,EAAU,EAAKhC,UAAUiC,cAAeC,EAAQF,EAAQG,eAAeD,QAAOE,EAAQF,EAAME,OACvF,CAAF,gBACCC,GAAWC,EAAAA,EAAAA,IAAgBF,MAEvBG,GAAa,kBACZF,GAAQ,IACXG,EAAGN,EAAMO,UAEb,EAAKC,kBAAmBC,EAAAA,EAAAA,IAAgBJ,EAAYA,EAAWC,IAClE,sCAGK,IAAII,SAAQ,SAACC,EAASC,GACxB,GAAKZ,EAAMa,MAAX,CAGA,IAAMC,EAAMC,SAASC,cAAc,OACnCF,EAAIG,iBAAiB,QAAQ,WACzB,EAAKC,YAAc,CACfL,MAAOC,EACPP,QAASP,EAAMO,SAEnBI,GACJ,IACAG,EAAIG,iBAAiB,SAAS,SAACE,GAC3BP,EAAOO,EAAIC,MACf,IACAN,EAAIO,IAAMrB,EAAMa,KAZhB,CAaJ,IAAE,2CAGV9C,KAAKuD,WAAa,WACd,IAAM7D,EAAU,EAAKA,QAASqC,EAAU,EAAKhC,UAAUiC,cACvD,GAAKtC,EAUL,IAAK,IAAMP,KAPP,EAAKqE,aACL,EAAKC,gBAAiBC,EAAAA,EAAAA,IAAW,CAAC,EAAGhE,EAAQF,OAC7C,EAAKmE,uBAGL,EAAKC,sBAES7B,EAAQvC,MACtB,GAAKL,GAAQ4C,EAAQvC,MAArB,CAGA,IAAMI,EAAQmC,EAAQvC,MAAML,GACvBS,GAGLF,EAAQF,MAAMK,YAAYV,EAAKS,EAAO,YALtC,CAOR,EACAI,KAAK6D,YAAU,uBAAG,iGAC4F,GAApG9B,EAAU,EAAKhC,UAAUiC,cAAe8B,EAAQ/B,EAAQgC,UAAUC,KAAKF,MAAOG,EAAYH,EAAMhD,KACjGgD,EAAMI,OAAQ,CAAF,gDAGkD,GAA3C,EAAG1B,EAAH,EAA+BsB,EAAMK,QACzDF,EAAU9B,MAAO,CAAF,gBACmC,GAA5CiC,GAAY/B,EAAAA,EAAAA,IAAgB4B,EAAU9B,OAC5B,CAAF,gDAGd,EAAKkC,WAAa,CACdlC,OAAO,UACAiC,GAEP5B,QAAAA,GACF,yCAGI,IAAIG,SAAQ,SAACC,EAASC,GACxB,GAAKoB,EAAUnB,MAAf,CAGA,IAAMC,EAAMC,SAASC,cAAc,OACnCF,EAAIG,iBAAiB,QAAQ,WACzB,EAAKmB,WAAa,CACdvB,MAAOC,EACPP,QAAAA,GAEJI,GACJ,IACAG,EAAIG,iBAAiB,SAAS,SAACE,GAC3BP,EAAOO,EAAIC,MACf,IACAN,EAAIO,IAAMW,EAAUnB,KAZpB,CAaJ,IAAE,4CAGV9C,KAAKsE,WAAa,SAACC,GACf,EAAKC,MAAK,SAACjE,GAAG,OAAKkE,EAAAA,EAAAA,IAAUlE,EAAK,EAAKmE,KAAMH,EAAU,GAC3D,EACAvE,KAAK2E,YAAc,SAAC7B,EAAON,GACvB,EAAKgC,MAAK,SAACjE,GAAG,OAAKqE,EAAAA,EAAAA,IAAWrE,EAAK,EAAKmE,KAAM5B,EAAON,EAAQ,GACjE,EACAxC,KAAK6E,aAAe,WAChB,IAAMnF,EAAU,EAAKA,QAChBA,IAGL,EAAKoF,uBAAsB,SAACC,GAAQ,OAAKA,EAASC,YAAY,IAC9D,EAAKzB,aACL,EAAK0B,iBACL,EAAKH,uBAAsB,SAACC,GAAQ,OAAKA,EAASG,QAAQxF,EAAS,CAAEyF,YAAY,GAAO,IAC5F,EACAnF,KAAK4D,oBAAsB,WACvB,IAAMlE,EAAU,EAAKA,QAAS0F,EAAgB,EAAK3B,eAC7C/D,GAAW0F,GAGjB9F,EAASI,EAAS0F,EACtB,EACApF,KAAK8E,sBAAwB,SAACO,GACrB,EAAKC,mBAGVD,EAAS,EAAKC,kBAClB,EACAtF,KAAK2D,oBAAsB,WACvB,IAAMjE,EAAU,EAAKA,QACrB,GAAKA,EAAL,CAIAJ,EAASI,EAAS,CACd6F,SAAU,QACVC,OAAQ,EAAKzF,UAAUiC,cAAcyD,WAAWD,OAAOE,SAH7C,IAIVC,IAAK,IACLC,KAAM,IACNC,MAAO,OACPC,OAAQ,SACT,EATH,CAUJ,EACA9F,KAAK0E,KAAO,CACRoB,OAAQ,EACRD,MAAO,GAEX7F,KAAK+F,SAAW,KAChB/F,KAAKgG,YAAa,EAClBhG,KAAKY,iBAAmB,GACxBZ,KAAKG,kBAAoB,GACzBH,KAAKoB,eAAiB,GACtBpB,KAAK0B,cAAgB,EACzB,CA8PC,OA9PA,iCACD,WACI,OAAO1B,KAAKD,UAAUiC,cAAcyD,WAAWvB,MACnD,GAAC,mBACD,WAAQ,WACEnC,EAAU/B,KAAKD,UAAUiC,cAAe8B,EAAQ/B,EAAQgC,UAAUC,KAAKF,MAAOG,EAAYjE,KAAKqE,WACjGtC,EAAQG,eAAegC,OACvBlE,KAAKiG,QAEAnC,EAAMI,QAAUJ,EAAMK,OAJkG,GAIxEF,EACjDA,EAAU9B,MACVnC,KAAKsE,YAAW5B,EAAAA,EAAAA,IAAgBuB,EAAU9B,MAAO8B,EAAUzB,UAEtDyB,EAAUnB,OACf9C,KAAK2E,YAAYV,EAAUnB,MAAOmB,EAAUzB,SAG3CT,EAAQmE,OACblG,KAAKwE,MAAK,SAACjE,IACP2F,EAAAA,EAAAA,IAAM3F,EAAK,EAAKmE,KACpB,GAER,GAAC,qBACD,WAEI,GADA1E,KAAKmG,OACDnG,KAAKgG,WAAY,CACjB,IAAMtG,EAAUM,KAAKN,QACd,OAAPA,QAAO,IAAPA,GAAAA,EAAS0G,QACb,MAEIpG,KAAK4D,sBAET5D,KAAKY,iBAAmB,GACxBZ,KAAKG,kBAAoB,GACzBH,KAAKoB,eAAiB,GACtBpB,KAAK0B,cAAgB,EACzB,GAAC,kBACD,SAAK2E,GACD,IAAM9F,EAAMP,KAAK+F,SACjB,GAAKxF,EAGL,OAAO8F,EAAG9F,EACd,GAAC,uBACD,SAAU8F,GACN,IAAM9F,EAAMP,KAAK+F,SACjB,GAAKxF,EAGL,OAAO8F,EAAG9F,EACd,GAAC,0BACD,SAAaL,EAAUoG,GAAO,aAC1B,IAAIpG,EAASqG,WAAYrG,EAASsG,UAAlC,CAGA,IAAMhG,EAASN,EAASuG,YACxB,KAAIjG,GAD+C,GACnD,CAGA,IAAMkG,EAAUxG,EAASyG,eAAgBC,EAAmC,QAA5B,EAAG1G,EAAS2G,wBAAgB,QAAIH,EAChF,EAAuB1G,KAAKuB,yBAAyBrB,GAAS,eAAzDsB,EAAM,KAAEC,EAAM,KACdD,IACDA,EAASkF,GAERjF,IACDA,EAASmF,IAERpF,GAAWC,IAGhBzB,KAAKwE,MAAK,SAACjE,GAAQ,YACTR,EAAY,EAAKA,UAAWgC,EAAUhC,EAAUiC,cAAe8E,EAAgB5G,EAAS6B,QAAQyD,OAAgCuB,EAAH,EAAuC7G,EAAS6G,aAAcC,EAAiB,KAAH,IAAGD,EAAgBD,EAAcG,aAAiCzE,EAA4D,QAArD,EAA0B,QAA1B,EAAGtC,EAASgH,OAAO1E,eAAO,QAAoB,QAApB,EAAItC,EAASsC,eAAO,aAAhB,EAAkB5C,aAAK,QAA/D,EAAsIa,EAAW+B,EAAUwE,EAAgBG,GAAlD,QAAzB,EAAGjH,EAASkH,qBAAa,QAAI5E,GAA+EwE,EAAgBrG,EAAY,CAAC,EAAGD,EAAc,CACpgBI,KAAMU,GAAS6F,EAAAA,EAAAA,IAAgB7F,EAAQf,QAAYpB,GAEvDqB,EAAYK,OAASU,GAAS4F,EAAAA,EAAAA,IAAgB5F,EAAQ0F,GAAkBzG,EAAYI,KACpF,EAAKR,sBAAsBC,EAAKL,EAAUM,EAAQC,EAAUC,EAAaC,IACzE2G,EAAAA,EAAAA,IAAa,CACTvH,UAAAA,EACAwH,QAAShH,EACTL,SAAAA,EACAoG,MAAAA,EACA5F,YAAAA,EACAwB,eAAgBH,EAAQG,eAAegC,OACvCsD,UAAWzF,EAAQG,eAAesF,UAClChH,OAAQA,EAAS,KAAH,IAAGuG,EAAgBD,EAAcW,UAC/CjF,QAAS/B,EACTiH,OAAQxH,EAAS6B,QAAQ2F,OACzB/G,UAAAA,IAEJ,EAAKV,uBAAuBC,EAChC,GAhCA,CAJA,CAqCJ,GAAC,gCACD,SAAmBmB,EAAQnB,EAAUoG,GACjCtG,KAAKwE,MAAK,SAACjE,GAAG,OAAKoH,EAAAA,EAAAA,IAAmBpH,EAAKc,EAAQnB,EAAUoG,EAAM,GACvE,GAAC,wBACD,SAAWjF,EAAQiF,GACftG,KAAKwE,MAAK,SAACjE,GAAG,OAAKqH,EAAAA,EAAAA,IAAWrH,EAAKc,EAAQiF,EAAM,GACrD,GAAC,2DACD,8FAUsB,OATlBtG,KAAK8E,uBAAsB,SAAC+C,GAAG,OAAKA,EAAI7C,YAAY,IACpDhF,KAAKsF,mBAAoBwC,EAAAA,EAAAA,KAAqB,SAACC,GAAY,IAC3B,EAD2B,UAClCA,GAAO,IAA5B,IAAK,EAAL,qBAA8B,KAAnBC,EAAM,QACO,eAAhBA,EAAOC,MAAkD,UAAzBD,EAAOE,eACvC,EAAKrD,cAEb,CAAC,+BACL,IACA7E,KAAKsB,SACLtB,KAAKuD,aAAa,SACZvD,KAAK8B,aAAY,gCAEb9B,KAAK6D,aAAY,0DAGvBsE,EAAAA,EAAAA,MAAY9E,MAAM,EAAD,IAAI,QAEzBrD,KAAKiF,iBACLjF,KAAK8E,uBAAsB,SAAC+C,GACnB,EAAKnI,SAGVmI,EAAI3C,QAAQ,EAAKxF,QAAS,CAAEyF,YAAY,GAC5C,IACAnF,KAAKoI,eACLpI,KAAKqI,cACLrI,KAAKiG,QAAQ,0DAChB,kDA7BA,IA6BA,4BACD,WACI,IAA8CqC,EAA9BtI,KAAKD,UAAUiC,cAAoCsG,WAAY5I,EAAUM,KAAKN,QAC9F,GAAKA,EAAL,CAGA,IAAMC,EAAeD,EAAQF,MAC7B,GAAKG,EAAL,CAGA,GAAI2I,EAAWnG,MAAO,CAClB,IAAMA,GAAQE,EAAAA,EAAAA,IAAgBiG,EAAWnG,OACzCxC,EAAa4I,gBAAkBpG,GAAQO,EAAAA,EAAAA,IAAgBP,EAAOmG,EAAW9F,SAAW,EACxF,MAEI7C,EAAa4I,gBAAkB,GAEnC5I,EAAa6I,gBAAkBF,EAAWxF,OAAS,GACnDnD,EAAa8I,mBAAqBH,EAAW/C,UAAY,GACzD5F,EAAa+I,iBAAmBJ,EAAWK,QAAU,GACrDhJ,EAAaiJ,eAAiBN,EAAW5D,MAAQ,EAXjD,CAJA,CAgBJ,GAAC,yBACD,WACI1E,KAAKoB,eAAiB,GAAG,IACsB,EADtB,UACApB,KAAKD,UAAU8I,SAAO,IAA/C,IAAK,EAAL,qBAAiD,OAAnCxH,GAAmC,kBAA7B,GACZA,EAAOC,QACPtB,KAAKoB,eAAe0H,KAAKzH,IAED,QAA5B,EAAIA,EAAOM,yBAAiB,QAAIN,EAAOQ,sBACnC7B,KAAK0B,cAAcoH,KAAKzH,EAEhC,CAAC,+BACL,GAAC,0BACD,WACIrB,KAAKY,iBAAmB,GACxBZ,KAAKG,kBAAoB,GAAG,IAC2B,EAD3B,UACNH,KAAKD,UAAUgE,UAAUgF,UAAQ,IAAvD,IAAK,EAAL,qBAAyD,SAA9C3I,EAAO,QACVA,EAAQC,WACRL,KAAKG,kBAAkB2I,KAAK1I,IAEwB,QAAxD,EAA0B,QAA1B,EAAIA,EAAQS,sBAAc,QAAIT,EAAQY,0BAAkB,QAAIZ,EAAQc,aAChElB,KAAKY,iBAAiBkI,KAAK1I,EAEnC,CAAC,+BACL,GAAC,wBACD,SAAWb,GAAQ,WACXS,KAAKgG,YAAchG,KAAKN,SACxBM,KAAKN,QAAQ0G,SAEjBpG,KAAKgG,WACDzG,EAAOyJ,SAAWC,EAAAA,MAAsB1J,EAAOyJ,QACF,SAAvCzJ,EAAOyJ,QAAQC,EAAAA,IACfjJ,KAAKgG,WACfhG,KAAKN,QAAUH,EACfS,KAAKN,QAAQwJ,WAAa,OAC1BlJ,KAAKyD,gBAAiBC,EAAAA,EAAAA,IAAW,CAAC,EAAG1D,KAAKN,QAAQF,OAClDQ,KAAK0E,KAAKoB,OAASvG,EAAO4J,aAC1BnJ,KAAK0E,KAAKmB,MAAQtG,EAAO6J,YACzBpJ,KAAK+F,SAAW/F,KAAKN,QAAQ2J,WAAW,MACxCrJ,KAAK8E,uBAAsB,SAAC+C,GACnB,EAAKnI,SAGVmI,EAAI3C,QAAQ,EAAKxF,QAAS,CAAEyF,YAAY,GAC5C,IACAnF,KAAKD,UAAUuJ,OAAOC,OACtBvJ,KAAKiF,gBACT,GAAC,mBACD,WAAQ,WACElD,EAAU/B,KAAKD,UAAUiC,cAC/BhC,KAAKwE,MAAK,SAACjE,GACHwB,EAAQG,eAAegC,QAAUnC,EAAQG,eAAeD,QACxDiE,EAAAA,EAAAA,IAAM3F,EAAK,EAAKmE,MACZ,EAAKvB,YACL,EAAKwB,YAAY,EAAKxB,YAAYL,MAAO,EAAKK,YAAYX,SAErD,EAAKC,iBACV,EAAK6B,WAAW,EAAK7B,kBAGrB,EAAK6B,cAIT,EAAKA,YAEb,GACJ,GAAC,oBACD,WACI,IAAKtE,KAAKN,QACN,OAAO,EAEX,IAAMK,EAAYC,KAAKD,UAAWyJ,EAAUzJ,EAAUuJ,OAAOG,WAAY/E,EAAO3E,EAAUR,OAAOmF,KAAMgF,EAC5F1J,KAAKN,QAAQ0J,YAAcI,EADiEE,EAE3F1J,KAAKN,QAAQyJ,aAAeK,EAExC,GAAIE,IAAmBhF,EAAKoB,QACxB4D,IAAkBhF,EAAKmB,OACvB6D,IAAmB1J,KAAKN,QAAQoG,QAChC4D,IAAkB1J,KAAKN,QAAQmG,MAC/B,OAAO,EAEX,IAAM8D,GAAU,UAAKjF,GASrB,OARA1E,KAAKN,QAAQmG,MAAQnB,EAAKmB,MAAQ7F,KAAKN,QAAQ0J,YAAcI,EAC7DxJ,KAAKN,QAAQoG,OAASpB,EAAKoB,OAAS9F,KAAKN,QAAQyJ,aAAeK,EAC5DxJ,KAAKD,UAAU6J,SACf7J,EAAUgE,UAAU8F,gBAAgB,CAChChE,MAAOnB,EAAKmB,MAAQ8D,EAAQ9D,MAC5BC,OAAQpB,EAAKoB,OAAS6D,EAAQ7D,UAG/B,CACX,GAAC,kBACD,WAAO,WACH9F,KAAK8E,uBAAsB,SAAC+C,GAAG,OAAKA,EAAI7C,YAAY,IACpDhF,KAAKsF,uBAAoBjG,EACzBW,KAAKwE,MAAK,SAACjE,GAAG,OAAK2F,EAAAA,EAAAA,IAAM3F,EAAK,EAAKmE,KAAK,GAC5C,GAAC,mEACD,8FACS1E,KAAKN,SAAYM,KAAKsB,SAAQ,iDAKR,GAFrBvB,EAAYC,KAAKD,UAAW+J,EAAe/J,EAAUgK,sBAC3DhK,EAAUgE,UAAUiG,aACpBhK,KAAKmB,uBACD2I,EAAc,CAAF,+BACN/J,EAAUkK,UAAS,gDAEhC,kDAXA,MAWA,EAjcc,G,UC1BnB,SAASC,EAAexK,EAASyK,EAAOC,EAASC,EAAKtI,GAClD,GAAIsI,EAAK,CACL,IAAIC,EAAa,CAAEC,SAAS,IACxBC,EAAAA,EAAAA,IAAUzI,GACVuI,EAAWG,QAAU1I,OAEJ1C,IAAZ0C,IACLuI,EAAavI,GAEjBrC,EAAQwD,iBAAiBiH,EAAOC,EAASE,EAC7C,KACK,CACD,IAAMI,EAAgB3I,EACtBrC,EAAQiL,oBAAoBR,EAAOC,EAASM,EAChD,CACJ,CACO,IAAME,EAAc,WACvB,WAAY7K,GAAW,2BACnBC,KAAKD,UAAYA,EACjBC,KAAK6K,mBAAqB,SAACC,GACvB,IAAM/K,EAAY,EAAKA,UAAWgC,EAAUhC,EAAUiC,cACtD,GAAI,EAAK+I,SAAU,CACf,IAAMC,EAAqBjL,EAAUkL,cAAcC,MAAOC,EAAWH,EAAmBzF,SACxF,IAAK4F,EACD,OAEJH,EAAmBI,eAAgB,UAAKD,GACxCH,EAAmBK,WAAY,IAAIC,MAAOC,UAC1C,IAAMC,EAAUzJ,EAAQkJ,cAAcQ,OAAOD,SAC7CE,EAAAA,EAAAA,IAA0BF,EAAQG,MAAM,SAACA,GAAI,OAAK,EAAK5L,UAAU6L,gBAAgBD,EAAK,GAC1F,CACA,GAAe,aAAXb,EAAE7C,KAAqB,CAEvB4D,YAAW,kBAAM,EAAKC,mBAAmB,GADtB,IAEvB,CACJ,EACA9L,KAAK+L,mBAAqB,SAACjB,GACvB,IAAMkB,EAAalB,EAAG/K,EAAY,EAAKA,UAAWgC,EAAUhC,EAAUgC,QAASkK,EAAgBlK,EAAQkK,cAAeC,EAAYF,EAAWG,QAAUF,EAAcG,KAAOH,EAAcI,MAAOC,EAAQvK,EAAQwK,OAAOC,MAAK,SAACF,GAAK,OAAKA,EAAMG,OAASP,CAAS,IAC5PI,GAASA,EAAMI,QAAQC,MAClB5M,EAAU6M,UAAUV,EAEjC,EACAlM,KAAK6M,wBAA0B,WAC3B,IAAM9M,EAAY,EAAKA,UAAWgC,EAAUhC,EAAUiC,cACtD,EAAK8J,oBACA/J,EAAQ+K,cAGT9J,UAAYA,SAAS+J,QACrBhN,EAAUiN,YAAa,EACvBjN,EAAUkN,UAGVlN,EAAUiN,YAAa,EACnBjN,EAAUmN,gBACLnN,EAAUoN,MAAK,GAGfpN,EAAUyE,MAAK,IAGhC,EACAxE,KAAKoN,oBAAsB,WACnB,EAAKC,iBACLC,aAAa,EAAKD,uBACX,EAAKA,gBAEhB,IAAME,EAAY,yCAAG,yFACmB,OAA9BhO,EAAS,EAAKQ,UAAUR,OAAM,SACxB,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQiO,eAAc,2CAC/B,kBAHiB,mCAIlB,EAAKH,eAAiBxB,YAAW,WAAW0B,GAAc,GAAE,EAAKxN,UAAUiC,cAAciJ,cAAcQ,OAAOnK,OAAOmM,MAAQC,EAAAA,GACjI,EACA1N,KAAK2N,8BAAgC,SAACC,EAAoBvD,GACtD,IAAMwD,EAAW,EAAKC,UAAW/N,EAAY,EAAKA,UAAWgC,EAAUhC,EAAUiC,cAC3E+L,EAAkBhO,EAAUkL,cAAcvL,QAChD,GAAKqO,EAAL,CAGA,IAAMC,EAAOD,EAAiBE,EAAWlO,EAAUR,OAAOG,QACtDuO,IACAA,EAASzO,MAAM0O,cAAgBF,IAASC,EAAW,UAAY,SAE7DlM,EAAQkJ,cAAcQ,OAAO0C,QAAQjK,QAAUnC,EAAQkJ,cAAcQ,OAAOD,QAAQtH,UAG1FgG,EAAe6D,EAAiBK,EAAAA,GAAgBP,EAASQ,UAAWhE,GACpEH,EAAe6D,EAAiBO,EAAAA,GAAiBT,EAASU,WAAYlE,GACtEH,EAAe6D,EAAiBS,EAAAA,GAAgBX,EAASY,UAAWpE,GAC/DtI,EAAQkJ,cAAcQ,OAAOD,QAAQtH,QAItCgG,EAAe6D,EAAiBW,EAAAA,GAAeb,EAASc,cAAetE,GACvEH,EAAe6D,EAAiBa,EAAAA,GAAcf,EAASgB,QAASxE,GAChEH,EAAe6D,EAAiBe,EAAAA,GAAgBjB,EAASkB,UAAW1E,IALpEH,EAAe6D,EAAiBW,EAAAA,GAAeb,EAASmB,SAAU3E,GAOtEH,EAAe6D,EAAiBH,EAAoBC,EAASoB,WAAY5E,GACzEH,EAAe6D,EAAiBmB,EAAAA,GAAkBrB,EAASsB,YAAa9E,GApBxE,CAqBJ,EACArK,KAAKoP,iBAAmB,SAAC/E,GACrB,IAAMwD,EAAW,EAAKC,UAAW/N,EAAY,EAAKA,UAA8CsP,EAAzBtP,EAAUiC,cAAoCiJ,cAAcqE,UAAWrB,EAAWlO,EAAUR,OAAOG,QACtKkO,EAAqB2B,EAAAA,GACzB,GAAmB,WAAfF,EACAtP,EAAUkL,cAAcvL,QAAU8P,OAClC5B,EAAqB6B,EAAAA,QAEpB,GAAmB,WAAfJ,GAA2BpB,EAAU,OAC1ClO,EAAUkL,cAAcvL,QAAgC,QAAzB,EAAGuO,EAASyB,qBAAa,QAAIzB,EAAS0B,UACzE,MAEI5P,EAAUkL,cAAcvL,QAAUuO,EAEtC,EAAK2B,kBAAkBvF,GACvB,EAAKwF,cAAcxF,GACnB,EAAKsD,8BAA8BC,EAAoBvD,GACnDrH,UACAkH,EAAelH,SAAU8M,EAAAA,GAAuBjC,EAASkC,iBAAkB1F,GAAK,EAExF,EACArK,KAAK4P,kBAAoB,SAACvF,GACtB,IAAMwD,EAAW,EAAKC,UAAWkC,GAAaC,EAAAA,EAAAA,IAAe,gCACxDD,SAG+B3Q,IAAhC2Q,EAAW9M,sBAIgB7D,IAA3B2Q,EAAWE,cAGX7F,EACA2F,EAAWE,YAAYrC,EAASsC,gBAGhCH,EAAWI,eAAevC,EAASsC,iBAVnCjG,EAAe8F,EAAY,SAAUnC,EAASwC,YAAahG,GAYnE,EACArK,KAAK6P,cAAgB,SAACxF,GAClB,IAAMwD,EAAW,EAAKC,UAAW/N,EAAY,EAAKA,UAClD,GADuEA,EAAUiC,cACpEiJ,cAAcQ,OAAOnK,OAGlC,GAA8B,qBAAnBgP,eAAX,CAIA,IAAMrC,EAAWlO,EAAUR,OAAOG,QAC9B,EAAK6Q,kBAAoBlG,GACrB4D,GACA,EAAKsC,gBAAgBC,UAAUvC,GAEnC,EAAKsC,gBAAgBvL,oBACd,EAAKuL,kBAEN,EAAKA,iBAAmBlG,GAAO4D,IACrC,EAAKsC,gBAAkB,IAAID,gBAAe,SAACG,GACzBA,EAAQjE,MAAK,SAAC1B,GAAC,OAAKA,EAAE4F,SAAWzC,CAAQ,KAIvD,EAAKb,qBACT,IACA,EAAKmD,gBAAgBrL,QAAQ+I,GAjBjC,MAFI/D,EAAesF,OAAQmB,EAAAA,GAAa9C,EAASvM,OAAQ+I,EAqB7D,EACArK,KAAK4Q,WAAa,WACd,IAAQ3F,EAAkB,EAAKlL,UAAvBkL,cACR,GAAKA,EAAL,CAGA,IAAQC,EAAUD,EAAVC,MACRA,EAAM2F,UAAW,EACjB3F,EAAM4F,aAAe5F,EAAM3F,QAH3B,CAIJ,EACAvF,KAAK+Q,iBAAmB,SAACjG,GACf,IAAA/K,EAAY,EAAKA,UAAWgC,EAAUhC,EAAUiC,cAAiBkJ,EAAUnL,EAAUkL,cAApBC,MACvEA,EAAM8F,QAAS,EACf,IAAIC,GAAU,EACRC,EAAgBhG,EAAM3F,SAC5B,GAAK2L,GAAkBnP,EAAQkJ,cAAcQ,OAAOD,QAAQtH,OAA5D,CAEC,IACyC,EADzC,UACwBnE,EAAU8I,SAAO,IAA1C,IAAK,EAAL,qBAA4C,KAA9BxH,GAA8B,kBAAxB,GAChB,GAAKA,EAAO8P,qBAGZF,EAAU5P,EAAO8P,mBAAmBD,IAEhC,KAER,CAAC,+BACID,GACD,EAAKpG,mBAAmBC,GAE5BI,EAAM2F,UAAW,CAbjB,CAcJ,EACA7Q,KAAK8L,kBAAoB,WACrB,IAAMb,EAAgB,EAAKlL,UAAUkL,cACrC,GAAKA,EAAL,CAGA,IAAMC,EAAQD,EAAcC,aACrBA,EAAM3F,gBACN2F,EAAME,qBACNF,EAAM4F,aACb7F,EAAcmG,OAAS7B,EAAAA,GACvBrE,EAAM8F,QAAS,EACf9F,EAAM2F,UAAW,CAPjB,CAQJ,EACA7Q,KAAKqR,gBAAkB,SAACvG,GACpB,IAAM/K,EAAY,EAAKA,UAAWgC,EAAUhC,EAAUiC,cAAeiJ,EAAgBlL,EAAUkL,cAAegD,EAAWlO,EAAUR,OAAOG,QAC1I,GAAkB,OAAbuL,QAAa,IAAbA,GAAAA,EAAevL,QAApB,CAIA,IAAI4R,EACJ,GAFArG,EAAcC,MAAM8F,QAAS,EAEzBlG,EAAE7C,KAAKsJ,WAAW,WAAY,CAC9B,EAAKxG,UAAW,EAChB,IAAMyG,EAAa1G,EACnB,GAAIG,EAAcvL,UAAY8P,QAC1B,GAAIvB,EAAU,CACV,IAAMwD,EAAaxD,EAASyD,wBAC5BJ,EAAM,CACFK,EAAGH,EAAWI,QAAUH,EAAW7L,KACnCiM,EAAGL,EAAWM,QAAUL,EAAW9L,IAE3C,OAEC,GAAwC,WAApC5D,EAAQkJ,cAAcqE,UAAwB,CACnD,IAAMyC,EAASP,EAAWd,OAAQA,EAASc,EAAWQ,cACtD,GAAID,GAAUrB,GAAUzC,EAAU,CAC9B,IAAMgE,EAAaF,EAAOL,wBAAyBQ,EAAaxB,EAAOgB,wBAAyBS,EAAalE,EAASyD,wBACtHJ,EAAM,CACFK,EAAGH,EAAWY,QA5O3B,EA4O8CH,EAAWrM,MAAQsM,EAAWtM,KAAOuM,EAAWvM,MACjFiM,EAAGL,EAAWa,QA7O3B,EA6O8CJ,EAAWtM,KAAOuM,EAAWvM,IAAMwM,EAAWxM,KAEvF,KACK,SACD2L,EAAM,CACFK,EAAqB,QAApB,EAAEH,EAAWY,eAAO,QAAIZ,EAAWI,QACpCC,EAAqB,QAApB,EAAEL,EAAWa,eAAO,QAAIb,EAAWM,QAE5C,CACJ,MACK,GAAIN,EAAWd,SAAWzC,EAAU,SACrCqD,EAAM,CACFK,EAAqB,QAApB,EAAEH,EAAWY,eAAO,QAAIZ,EAAWI,QACpCC,EAAqB,QAApB,EAAEL,EAAWa,eAAO,QAAIb,EAAWM,QAE5C,CACJ,MAGI,GADA,EAAK/G,SAAsB,cAAXD,EAAE7C,KACdgG,EAAU,SACJqE,EAAaxH,EAAqByH,EAAYD,EAAWE,QAAQF,EAAWE,QAAQrO,OAArD,GAA6EgO,EAAalE,EAASyD,wBACxIJ,EAAM,CACFK,EAAGY,EAAUX,SAA0B,QAAnB,EAAIO,EAAWvM,YAAI,QAF0I,GAGjLiM,EAAGU,EAAUT,SAAyB,QAAlB,EAAIK,EAAWxM,WAAG,QAH2I,GAKzL,CAEJ,IAAM6D,EAAUzJ,EAAUuJ,OAAOG,WAC7B6H,IACAA,EAAIK,GAAKnI,EACT8H,EAAIO,GAAKrI,GAEbyB,EAAcC,MAAM3F,SAAW+L,EAC/BrG,EAAcmG,OAAShD,EAAAA,EAtDvB,CAuDJ,EACApO,KAAKyS,UAAY,SAAC3H,GAEd,IADA,IAAM1H,EAAM0H,EACZ,MADyB4H,MAAMC,KAAKvP,EAAIwP,gBACb,eAAE,CAAxB,IAAMC,EAAK,KACZ,EAAKC,SAASC,OAAOF,EAAMG,WAC/B,CACA,EAAKlH,mBACT,EACA9L,KAAKiT,eAAiB,SAACnI,GAEnB,IADA,IAAM1H,EAAM0H,EACZ,MADyB4H,MAAMC,KAAKvP,EAAIwP,gBACb,eAAE,CAAxB,IAAMC,EAAK,KACZ,EAAKC,SAASC,OAAOF,EAAMG,WAC/B,CACA,EAAKjC,iBAAiBjG,EAC1B,EACA9K,KAAKkT,YAAc,SAACpI,GAEhB,IADA,IAAM1H,EAAM0H,EACZ,MADyB4H,MAAMC,KAAKvP,EAAIwP,gBACb,eAAE,CAAxB,IAAMC,EAAK,KACZ,EAAKC,SAASK,IAAIN,EAAMG,WAAYI,YAAYC,MACpD,CACA,EAAKhC,gBAAgBvG,EACzB,EACA9K,KAAK+K,UAAW,EAChB/K,KAAK8S,SAAW,IAAIQ,IACpBtT,KAAK8N,UAAY,CACbiB,UAAW,kBAAM,EAAK6B,YAAY,EAClC3B,WAAY,kBAAM,EAAKnD,mBAAmB,EAC1CuC,UAAW,SAACvD,GAAC,OAAK,EAAKuG,gBAAgBvG,EAAE,EACzC+D,QAAS,SAAC/D,GAAC,OAAK,EAAKiG,iBAAiBjG,EAAE,EACxCyD,WAAY,SAACzD,GAAC,OAAK,EAAKoI,YAAYpI,EAAE,EACtC2D,UAAW,SAAC3D,GAAC,OAAK,EAAKuG,gBAAgBvG,EAAE,EACzCkE,SAAU,SAAClE,GAAC,OAAK,EAAK2H,UAAU3H,EAAE,EAClCqE,YAAa,SAACrE,GAAC,OAAK,EAAK2H,UAAU3H,EAAE,EACrC6D,cAAe,SAAC7D,GAAC,OAAK,EAAKmI,eAAenI,EAAE,EAC5CiF,iBAAkB,kBAAM,EAAKlD,yBAAyB,EACtDwD,YAAa,SAACvF,GAAC,OAAK,EAAKiB,mBAAmBjB,EAAE,EAC9CqF,eAAgB,SAACrF,GAAC,OAAK,EAAKiB,mBAAmBjB,EAAE,EACjDxJ,OAAQ,WACJ,EAAK8L,qBACT,EAER,CAMC,OANA,oCACD,WACIpN,KAAKoP,kBAAiB,EAC1B,GAAC,6BACD,WACIpP,KAAKoP,kBAAiB,EAC1B,KAAC,EA7SsB,G,oBCpBdmE,EAAkB,WAC3B,WAAYC,EAAQzT,IAAW,eAC3BC,KAAKD,UAAYA,EACjBC,KAAKyT,QAAUD,EACfxT,KAAK0T,aAAe,GACpB1T,KAAK2T,qBAAuB,GAC5B3T,KAAK4T,qBAAuB,EAChC,CAkDC,OAlDA,wCACD,SAAiBtN,GAAO,IAC8B,EAD9B,UACKtG,KAAK2T,sBAAoB,IAAlD,IAAK,EAAL,qBAAoD,KAAzCE,EAAU,QACbA,EAAWC,aACXD,EAAWE,SAASzN,EAE5B,CAAC,+BACL,GAAC,6BACD,SAAgBqF,GAAM,IACgC,EADhC,UACO3L,KAAK2T,sBAAoB,IAAlD,IAAK,EAAL,qBAAoD,OAAzCE,EAAU,QACS,QAA1B,EAAAA,EAAWjI,uBAAe,OAA1B,OAAAiI,EAA6BlI,EACjC,CAAC,+BACL,GAAC,2DACD,6GAC8B3L,KAAKyT,QAAQO,eAAehU,KAAKD,WAAW,GAAK,OAA3EC,KAAK0T,aAAe,EAAH,KACjB1T,KAAK2T,qBAAuB,GAC5B3T,KAAK4T,qBAAuB,GAAG,UACN5T,KAAK0T,cAAY,yDAA/BG,EAAU,aACTA,EAAW5L,KAAI,OACd,aADc,KACJ,GAGV,cAHU,KAGC,oBAF+B,OAA3CjI,KAAK2T,qBAAqB7K,KAAK+K,GAAY,6BAGA,OAA3C7T,KAAK4T,qBAAqB9K,KAAK+K,GAAY,6BAGnDA,EAAWtK,OAAO,uMAEzB,kDAhBA,IAgBA,+BACD,SAAkBrJ,EAAUoG,GAAO,IACmB,EADnB,UACNtG,KAAK2T,sBAAoB,IAAlD,IAAK,EAAL,qBAAoD,CAA/B,QACNzN,MAAMhG,EAAUoG,EAC/B,CAAC,mCACiD,EADjD,UACwBtG,KAAK4T,sBAAoB,IAAlD,IAAK,EAAL,qBAAoD,KAAzCC,EAAU,QACbA,EAAWC,UAAU5T,IACrB2T,EAAWE,SAAS7T,EAAUoG,EAEtC,CAAC,+BACL,GAAC,mBACD,SAAMpG,GAAU,IACsC,EADtC,UACaF,KAAK2T,sBAAoB,IAAlD,IAAK,EAAL,qBAAoD,KAAzCE,EAAU,QACbA,EAAWC,aACXD,EAAWI,MAAM/T,EAEzB,CAAC,mCACiD,EADjD,UACwBF,KAAK4T,sBAAoB,IAAlD,IAAK,EAAL,qBAAoD,KAAzCC,EAAU,QACbA,EAAWC,UAAU5T,IACrB2T,EAAWI,MAAM/T,EAEzB,CAAC,+BACL,KAAC,EAzD0B,G,uCCQUgU,EAAO,GAqBhD,SAASC,EAAWC,GAChB,IAAKC,EAAAA,EAAAA,IAAUD,EAAKE,QAASF,EAAKG,YAAlC,CAGA,IAAMC,EAzB4B,EAyBjBJ,EAAK5T,OAClB4T,EAAKK,MAAQL,EAAKM,SAAWF,EAC7BJ,EAAKO,OAAOP,EAAK5T,QAEZ4T,EAAKK,MAAQD,GAClBJ,EAAKO,MAAMP,EAAK5T,OANpB,CAQJ,CACO,IAAMoU,EAAQ,WACjB,WAAYpB,EAAQzT,GAAW,2BAC3BC,KAAKD,UAAYA,EACjBC,KAAK6U,cAAgB,SAAC9U,EAAWwF,EAAUC,GAAyC,YACtC,EADKsP,EAAW,UAAH,6CApCzC,EAoC6D,UAClD/U,EAAU8I,SAAO,IAA1C,IAAK,EAAL,qBAA4C,0BAA9BxH,EAAM,KACV0T,OAAwC1V,IAA5BgC,EAAO2T,iBAAiC3T,EAAO2T,iBAAiBzP,EAAU,QAAQlG,EACpG,GAAI0V,EACA,OAAOE,EAAAA,EAAAA,OAAgBF,EAAUpD,EAAGoD,EAAUlD,EAAGrM,EAEzD,CAAC,+BACD,IAAM0P,EAAanV,EAAUR,OAAOmF,KAAMyQ,GAAgBC,EAAAA,EAAAA,IAAkC,CACxF1Q,KAAMwQ,EACN3P,SAAUA,IACV+L,EAAM2D,EAAAA,EAAAA,OAAgBE,EAAcxD,EAAGwD,EAActD,EAAGrM,GAAShF,EAAS,EAAKiG,YAAa4O,EAAW,EAAKtT,QAAQiC,KAAKqR,SAAUC,EAAgB,SAAChB,GACpJH,EAAW,CACPG,QAAAA,EACAC,WAAY,CAAC,UACbE,MAAOnD,EAAIK,EACX+C,SAAU3U,EAAUR,OAAOmF,KAAKmB,MAChC8O,MAAO,SAAC/U,GAAK,OAAM0R,EAAIK,GAAK/R,CAAK,EACjCY,OAAAA,GAER,EAAG+U,EAAc,SAACjB,GACdH,EAAW,CACPG,QAAAA,EACAC,WAAY,CAAC,UACbE,MAAOnD,EAAIO,EACX6C,SAAU3U,EAAUR,OAAOmF,KAAKoB,OAChC6O,MAAO,SAAC/U,GAAK,OAAM0R,EAAIO,GAAKjS,CAAK,EACjCY,OAAAA,GAER,EAKA,GAJA8U,EAA2B,QAAd,EAACD,EAASzP,YAAI,QAAIyP,EAAS3I,SACxC4I,EAA4B,QAAf,EAACD,EAASG,aAAK,QAAIH,EAAS3I,SACzC6I,EAAwB,QAAb,EAACF,EAAS1P,WAAG,QAAI0P,EAAS3I,SACrC6I,EAA2B,QAAhB,EAACF,EAASI,cAAM,QAAIJ,EAAS3I,SACpC,EAAKgJ,cAAcpE,EAAKwD,GAAW,CACnC,IAAMa,EAAY,EAClB,OAAO,EAAKd,cAAc9U,OAAWV,EAAWmG,EAAQsP,EAAWa,EACvE,CACA,OAAOrE,CACX,EACAtR,KAAK4V,mBAAqB,WACtB,IAA8DC,GAAzCC,EAAAA,EAAAA,IAAwB,EAAKC,WAA+BC,OAAQC,EAAc,EAAKlU,QAAQiC,KACpH,GAA8B,WAA1BiS,EAAYF,WAAoD,YAA1BE,EAAYF,UAClD,OAAOF,EAEX,IAAMK,GAAMC,EAAAA,EAAAA,KAASC,EAAAA,EAAAA,IAAcH,EAAYI,MAAMzW,QAAS0W,GAAYH,EAAAA,EAAAA,KAASC,EAAAA,EAAAA,IAAcH,EAAYI,MAAME,SAAUC,EAAQ,CACjI5Q,KAAM0Q,EAAYJ,EAAMhC,EACxBsB,MAAOc,EAAYJ,EAAMhC,GAQ7B,OANK+B,EAAYQ,WACbZ,EAAIQ,QAASK,EAAAA,EAAAA,KAAcC,EAAAA,EAAAA,IAAcH,EAAM5Q,KAAM4Q,EAAMhB,SAE3DS,EAAYW,QAAuC,kBAAtBX,EAAYY,QACzChB,EAAI1R,SAAU2S,EAAAA,EAAAA,OAEXjB,CACX,EACA7V,KAAK0V,cAAgB,SAACpE,GAAsC,IAAjCwD,EAAW,UAAH,6CA5FjB,EA6FRiC,EAAoB,EAAKhV,QAAQiV,WAAYxW,EAAS,EAAKiG,YACjE,IAAKsQ,EAAkB7S,OACnB,OAAO,EAEX,IAAM+S,EAAiBF,EAAkBG,QACzC,GAAID,EAAe/S,OACf,OAAO,EAEX,IAAMiT,EAAUF,EAAeE,QAASC,EAAa,EACrD,GAAID,GAAWC,GAActC,EAAWqC,EACpC,MAAM,IAAIE,MAAM,GAAD,OAAIC,EAAAA,GAAW,iDAElC,QAAS,EAAKvX,UAAUgE,UAAUyI,MAAK,SAACtM,GAAQ,OAAKqX,EAAAA,EAAAA,IAAYjG,EAAKpR,EAASqF,UAAY/E,EAASN,EAASuG,WAAW,GAC5H,EACAzG,KAAKwX,cAAgB,SAACrV,GAAU,MAC5B,IAAKA,IAAU,EAAKsV,OAAU,EAAKC,YAAc,EAAKD,KAAKE,MACvD,OAAOxV,EAEX,IAAgCyV,EAAa,EAAKH,KAAKI,YAAc,EAAKJ,KAAKK,SAAWC,EAAvE,EAAyGC,EAAU,EAAKP,KAAKI,WAAaI,KAAKC,GAAKhE,EAA1I,EAC7B,OAD6L+D,KAAKE,QAAuB,QAAhB,EAAC,EAAKV,KAAKpB,aAAK,QAA5L,GAAwM2B,IAAYC,KAAKC,GAAKN,IA/GjO,EAmHtB,EAAKF,UACE,EAAKA,UAEZ,EAAKD,KAAKE,OACHS,EAAAA,EAAAA,IAASjW,EAAO,EAAKsV,KAAKE,MAAM1P,KAAM,EAAKwP,KAAKE,MAAM/X,OAE1DuC,EARIA,CASf,EACAnC,KAAKqY,cAAgB,SAAC9S,GAAa,QACzBxF,EAAY,EAAKA,UAAWuY,GAAclC,EAAAA,EAAAA,IAAc,EAAKrU,QAAQyD,OAAO5F,OAClF,EAAK2F,SAAW,EAAKsP,cAAc9U,EAAWwF,GAAUgT,EAAAA,EAAAA,IAAMD,EADmC,EAChBvY,EAAUyY,UAC3F,EAAKC,gBAAkB,EAAKlT,SAASyQ,OACrC,IAAMd,EAAanV,EAAUR,OAAOmF,KAOpC,OANA,EAAKgU,YAAa,mBACXC,EAAAA,EAAAA,IAAY,EAAK5W,QAAQiC,KAAK4U,OAAQ1D,IAAW,IACpD1U,OAAuC,QAAjC,EAAE,EAAKuB,QAAQiC,KAAK4U,OAAOpY,cAAM,QAHe,EAItDmL,KAAmC,QAA/B,EAAE,EAAK5J,QAAQiC,KAAK4U,OAAOjN,YAAI,QAAI,YAE3C,EAAKoK,WAAY8C,EAAAA,EAAAA,IAA0B,EAAK9W,QAAQiC,KAAK+R,UAAW,EAAKxQ,SAAU,EAAKmT,YACpF,EAAK3W,QAAQiC,KAAK+R,WACtB,IAAK,SACD,EAAK+C,QAAU,SACf,MACJ,IAAK,UACD,EAAKA,QAAU,UAGvB,EAAKvC,OAASwC,EAAAA,EAAAA,MAClB,EACA/Y,KAAKyT,QAAUD,CACnB,CA2LC,OA3LA,+BACD,SAAQwF,GAAU,MACd,IAAIhZ,KAAKiZ,cAAejZ,KAAKwG,UAA7B,CAGAxG,KAAKwG,WAAY,EACjBxG,KAAKkH,OAAOgS,SAAU,EACtBlZ,KAAKmZ,KAAKD,SAAU,EACpB,IAAMnZ,EAAYC,KAAKD,UAAWqZ,EAAgBpZ,KAAKoZ,cAAeC,EAActZ,EAAUuZ,aAAaC,IAAIvZ,KAAKwZ,OACzG,OAAXH,QAAW,IAAXA,GAA4B,QAAjB,EAAXA,EAAaI,uBAAe,OAA5B,OAAAJ,EAA+BrZ,MAAM,IACK,EADL,UACZD,EAAU8I,SAAO,IAA1C,IAAK,EAAL,qBAA4C,OAA9BxH,GAA8B,kBAAxB,GACQ,QAAxB,EAAAA,EAAOqY,yBAAiB,OAAxB,OAAArY,EAA2BrB,KAAMgZ,EACrC,CAAC,mCACiD,EADjD,UACqBjZ,EAAUgE,UAAUgF,UAAQ,IAAlD,IAAK,EAAL,qBAAoD,OAAzC3I,EAAO,QACW,QAAzB,EAAAA,EAAQsZ,yBAAiB,OAAzB,OAAAtZ,EAA4BJ,KAAMgZ,EACtC,CAAC,+BACY,OAAbI,QAAa,IAAbA,GAAAA,EAAenF,MAAMjU,MACrBA,KAAKyT,QAAQkG,cAAc,oBAAqB,CAC5C5Z,UAAWC,KAAKD,UAChBqU,KAAM,CACFlU,SAAUF,OAhBlB,CAmBJ,GAAC,kBACD,SAAKsG,GACD,IAC0C,EADpCvG,EAAYC,KAAKD,UAAWR,EAASQ,EAAUR,OAAO,UACnCQ,EAAU8I,SAAO,IAA1C,IAAK,EAAL,qBAA4C,KAA9BxH,GAA8B,kBAAxB,GAChB9B,EAAOoI,mBAAmBtG,EAAQrB,KAAMsG,EAC5C,CAAC,+BACD/G,EAAO+H,aAAatH,KAAMsG,EAC9B,GAAC,0BACD,WAAe,MACX,OAAOtG,KAAKwX,cAA+B,QAAlB,EAACxX,KAAKkH,OAAO/E,aAAK,SAAIyX,EAAAA,EAAAA,IAAoB5Z,KAAKmC,OAC5E,GAAC,qBACD,WACI,OAAO,SAAAnC,KAAKyG,YApL6C,GAoLlBwR,KAAKC,GAAKhE,CACrD,GAAC,yBACD,WACI,MAAO,CACHvC,EAAG3R,KAAKuF,SAASoM,EAAI3R,KAAKuW,OAAO5E,EACjCE,EAAG7R,KAAKuF,SAASsM,EAAI7R,KAAKuW,OAAO1E,EACjCgI,EAAG7Z,KAAKuF,SAASsU,EAEzB,GAAC,uBACD,WAAY,MACR,OAAyB,QAAzB,EAAO7Z,KAAKkH,OAAO1G,cAAM,QAAIR,KAAK0E,KAAK9E,KAC3C,GAAC,4BACD,WAAiB,MACb,OAAOI,KAAKwX,cAA+B,QAAlB,EAACxX,KAAKkH,OAAO/E,aAAK,SAAIyX,EAAAA,EAAAA,IAAoB5Z,KAAK8Z,aAC5E,GAAC,kBACD,SAAKC,EAAIxU,EAAUyU,EAAiBC,GAAO,0BACjCla,EAAYC,KAAKD,UAAWyT,EAASxT,KAAKyT,QAChDzT,KAAK+Z,GAAKA,EACV/Z,KAAKia,MAAQA,EACbja,KAAKka,aAAc,EACnBla,KAAKma,YAAa,EAClBna,KAAKoa,YAAa,EAClBpa,KAAKqa,WAAY,EACjBra,KAAKsa,cAAe,EACpBta,KAAKua,aAAe,EACpBva,KAAKwG,WAAY,EACjBxG,KAAKiZ,aAAc,EACnBjZ,KAAKwa,SAAW,EAChBxa,KAAKya,WAAY,EACjBza,KAAKsJ,OAAS,CACVoR,YAAa,CAAC,GAElB1a,KAAK8Y,QAAU,SACf9Y,KAAK2a,oBAAqB,EACpB,IAAAnR,EAAUzJ,EAAUuJ,OAAOG,WAAYmR,EAAc7a,EAAUiC,cAAe6Y,GAAmBC,EAAAA,EAAAA,GAAqB9a,KAAKyT,QAAS1T,EAAW6a,EAAY7W,WAAYgX,EAAaF,EAAiBG,OAAO/S,KAAMgT,EAAYJ,EAAiBrB,MAAMvR,KAAQiT,EAAqBL,EAArBK,iBACnQlb,KAAKgb,QAASG,EAAAA,EAAAA,IAAyBJ,EAAY/a,KAAK+Z,GAAImB,GAC5Dlb,KAAKwZ,OAAQ2B,EAAAA,EAAAA,IAAyBF,EAAWjb,KAAK+Z,GAAImB,GAC1D,IAAME,EAAgBP,EAAiBG,OAAQK,EAAeR,EAAiBrB,MAC/E,GAAIQ,EAAiB,SACjB,GAA0B,QAA1B,EAAIA,EAAgBgB,cAAM,OAAtB,EAAwB/S,KAAM,CAC9B,IAAMqT,EAAqBtB,EAAgBgB,OAAO/S,KAAM+S,GAASG,EAAAA,EAAAA,IAAyBG,EAAoBtb,KAAK+Z,GAAImB,GACnHF,IACAhb,KAAKgb,OAASA,EACdI,EAAcG,KAAKvB,EAAgBgB,QAE3C,CACA,GAAyB,QAAzB,EAAIhB,EAAgBR,aAAK,OAArB,EAAuBvR,KAAM,CAC7B,IAAMuT,EAAoBxB,EAAgBR,MAAMvR,KAAMuR,GAAQ2B,EAAAA,EAAAA,IAAyBK,EAAmBxb,KAAK+Z,GAAImB,GAC/G1B,IACAxZ,KAAKwZ,MAAQA,EACb6B,EAAaE,KAAKvB,EAAgBR,OAE1C,CACJ,CACAxZ,KAAKyb,WAzOb,SAAwBT,EAAQI,EAAerB,EAAImB,GAC/C,IAAMO,EAAaL,EAAcrZ,QAAQiZ,GACzC,GAAKS,EAGL,OAAO/X,EAAAA,EAAAA,IAAW,CACdgY,MAAON,EAAcM,MACrB5a,KAAMsa,EAActa,OACrBqa,EAAAA,EAAAA,IAAyBM,EAAY1B,EAAImB,GAChD,CAgO0BS,CAAe3b,KAAKgb,OAAQI,EAAepb,KAAK+Z,GAAImB,GACtElb,KAAK4b,UAhOb,SAAuBpC,EAAO6B,EAActB,EAAImB,GAC5C,IAAMU,EAAYP,EAAatZ,QAAQyX,GACvC,GAAKoC,EAGL,OAAOlY,EAAAA,EAAAA,IAAW,CACdgY,MAAOL,EAAaK,MACpB5a,KAAMua,EAAava,OACpBqa,EAAAA,EAAAA,IAAyBS,EAAW7B,EAAImB,GAC/C,CAuNyBW,CAAc7b,KAAKwZ,MAAO6B,EAAcrb,KAAK+Z,GAAImB,GAClEL,EAAiBU,KAAKvB,GACtB,IAAMyB,EAAazb,KAAKyb,WACpBA,GACAZ,EAAiBU,KAAKE,EAAW1X,WAErC,IAAM6X,EAAY5b,KAAK4b,UACnBA,GACAf,EAAiBU,KAAKK,EAAU7X,WAEpC,IAAMkH,EAAgB,IAAI6Q,EAAAA,EAActI,EAAQzT,GAChDkL,EAAcsQ,KAAKxb,EAAUiC,cAAciJ,eAC3CA,EAAcsQ,KAAKV,EAAiB5P,eACpCjL,KAAKiL,cAAgBA,EACrBjL,KAAKma,WAA6B,QAAnB,EAAa,OAAVsB,QAAU,IAAVA,OAAU,EAAVA,EAAY3a,YAAI,QAAI+Z,EAAiBG,OAAOla,KAC9Dd,KAAKka,YAA+B,QAApB,EAAa,OAAVuB,QAAU,IAAVA,OAAU,EAAVA,EAAYC,aAAK,QAAIb,EAAiBG,OAAOU,MAChE1b,KAAKqa,UAA2B,QAAlB,EAAY,OAATuB,QAAS,IAATA,OAAS,EAATA,EAAW9a,YAAI,QAAI+Z,EAAiBrB,MAAM1Y,KAC3Dd,KAAKoa,WAA6B,QAAnB,EAAY,OAATwB,QAAS,IAATA,OAAS,EAATA,EAAWF,aAAK,QAAIb,EAAiBrB,MAAMkC,MAC7D1b,KAAK+B,QAAU8Y,EACf,IAAMkB,EAAc/b,KAAK+B,QAAQiC,KAAKgY,KACtChc,KAAKic,WAAY7F,EAAAA,EAAAA,IAAc2F,EAAYtO,MAAM7N,OAAS8N,EAAAA,GACtDqO,EAAYG,YACZlc,KAAKoZ,cAAgBpZ,KAAKyT,QAAQ0I,iBAAiBJ,EAAYG,WAC3Dlc,KAAKoZ,eAAiBrZ,EAAUqc,QAAQL,EAAYG,UAAWlc,KAAKoZ,gBACpEpZ,KAAKoZ,cAAc7P,KAAKxJ,IAGhCA,EAAUuJ,OAAO+S,aAAarc,MAC9BA,KAAK0E,MAAO4X,EAAAA,EAAAA,IAAkCtc,KAAK+B,QAAQ2C,KAAM8E,GACjExJ,KAAKkH,OAAS,CACVgS,SAAS,GAEblZ,KAAKmZ,KAAO,CACRD,SAAS,EACTja,OAAQ,GAEZe,KAAKqY,cAAc9S,GACnBvF,KAAKuc,gBAAkBvc,KAAK4V,qBAC5B5V,KAAKwc,SAAWxc,KAAKuc,gBAAgBvG,OAErChW,KAAKyc,UADe,GACWrG,EAAAA,EAAAA,IAAcpW,KAAK+B,QAAQiC,KAAK0Y,OAC/D,IAAM3Y,EAAYhE,EAAUgE,UAC5BA,EAAU4Y,cAAc3c,KAAKuF,SAASsU,GACtC7Z,KAAK+G,aAAe/G,KAAKuF,SAASsU,EAAI9Z,EAAUyY,QAChDxY,KAAK4c,MAAQ,GACb,IAAIC,EAAe9c,EAAU+c,cAAcvD,IAAIvZ,KAAKgb,QAC/C6B,IACDA,EAAe7c,KAAKyT,QAAQsJ,gBAAgB/c,KAAKgb,UAE7Cjb,EAAU+c,cAAc3J,IAAInT,KAAKgb,OAAQ6B,GAGjC,QAAhB,EAAIA,SAAY,OAAZ,EAAcG,YACdH,EAAaG,WAAWhd,MAE5B,IAAIqZ,EAActZ,EAAUuZ,aAAaC,IAAIvZ,KAAKwZ,OAC7CH,IACDA,EAAcrZ,KAAKyT,QAAQwJ,eAAejd,KAAKwZ,SAE3CzZ,EAAUuZ,aAAanG,IAAInT,KAAKwZ,MAAOH,GAGhC,QAAf,EAAIA,SAAW,OAAX,EAAa6D,WACb7D,EAAY6D,UAAUld,MAE1B,IAAMmd,EAA2B,QAAd,EAAG9D,SAAW,aAAX,EAAa+D,cAC/BD,IACAnd,KAAK4c,MAAQO,EAAcnd,OAE/BA,KAAKuG,UAAW,EAChBvG,KAAKqd,aAAchb,EAAAA,EAAAA,IAAgBrC,KAAK+B,QAAQ2F,OAAOvF,OAAO,IACtB,EADsB,UACxC4B,EAAUgF,UAAQ,IAAxC,IAAK,EAAL,qBAA0C,CAAxB,QACNQ,KAAKvJ,KACjB,CAAC,qCACmC,EADnC,UACmB+D,EAAUuZ,QAAM,IAApC,IAAK,EAAL,qBAAsC,OAA3BC,EAAK,QACF,QAAV,EAAAA,EAAMhU,YAAI,OAAV,OAAAgU,EAAavd,KACjB,CAAC,iCACW,QAAZ,EAAA6c,SAAY,OAAc,QAAd,EAAZ,EAAcW,oBAAY,OAA1B,SAA6Bzd,EAAWC,MAC7B,QAAX,EAAAqZ,SAAW,OAAc,QAAd,EAAX,EAAamE,oBAAY,OAAzB,SAA4Bzd,EAAWC,MAAM,IACH,EADG,WACpBD,EAAU8I,SAAO,IAA1C,IAAK,GAAL,sBAA4C,QAA9BxH,IAA8B,kBAAxB,GACM,QAAtB,GAAAA,GAAOoc,uBAAe,QAAtB,QAAApc,GAAyBrB,KAC7B,CAAC,mCACL,GAAC,4BACD,WACI,IAAMQ,EAASR,KAAKyG,YAAayO,EAAalV,KAAKD,UAAUR,OAAOmF,KAAMa,EAAWvF,KAAKuF,SAC1F,OAAQA,EAASoM,IAAMnR,GACnB+E,EAASsM,IAAMrR,GACf+E,EAASsM,GAAKqD,EAAWpP,OAAStF,GAClC+E,EAASoM,GAAKuD,EAAWrP,MAAQrF,CACzC,GAAC,uBACD,WACI,OAAQR,KAAKwG,YAAcxG,KAAKuG,UAAYvG,KAAK0d,gBACrD,GAAC,mBACD,WAAQ,IACmD,EADnD,UACkB1d,KAAKD,UAAUgE,UAAUgF,UAAQ,IAAvD,IAAK,EAAL,qBAAyD,OAA9C3I,EAAO,QACD,QAAb,EAAAA,EAAQ6T,aAAK,OAAb,OAAA7T,EAAgBJ,KACpB,CAAC,+BACL,KAAC,EA3SgB,GCzCR2d,GAAK,QACd,WAAYpY,EAAUrF,IAAU,eAC5BF,KAAKuF,SAAWA,EAChBvF,KAAKE,SAAWA,CACpB,I,UCFEgU,EAAO,GACA0J,EAAQ,WACjB,WAAYC,EAAWC,GAAU,2BAC7B9d,KAAK6d,UAAYA,EACjB7d,KAAK8d,SAAWA,EAChB9d,KAAK+d,WAAa,WAEd,IADA,MAAiB,EAAKF,UAAUtY,SAAxBoM,EAAC,EAADA,EAAGE,EAAC,EAADA,EAAC,EAAkD,EAAKgM,UAAUnZ,KAAjCmB,EAAK,EAALA,MAAOC,EAAM,EAANA,OAAkCgY,EAAa,EAAbA,SAC5EE,EAAI,EAAGA,EAPmB,EAOCA,IAAK,CACrC,IAAMC,EAAaD,EARR,EASX,EAAKE,MAAMpV,KAAK,IAAI8U,EAAS,IAAIO,EAAAA,GAAUxM,EAAI9L,EAAQqO,EAAO+J,EAAYpM,EAAI/L,EAASoO,GAAQ+D,KAAKmG,MAAMJ,EAAI9J,GAAQ+J,GAAapY,EAAQqO,EAAMpO,EAASoO,GAAO4J,GACrK,CACA,EAAKO,UAAW,CACpB,EACAre,KAAKse,QAAU,GACfte,KAAKqe,UAAW,EAChBre,KAAKke,MAAQ,EACjB,CAuCC,OAvCA,8BACD,SAAOK,GACH,QAAKve,KAAK6d,UAAUW,SAASD,EAAMhZ,YAG/BvF,KAAKse,QAAQna,OAASnE,KAAK8d,UAC3B9d,KAAKse,QAAQxV,KAAKyV,IACX,IAENve,KAAKqe,UACNre,KAAK+d,aAEF/d,KAAKke,MAAMO,MAAK,SAACC,GAAG,OAAKA,EAAIC,OAAOJ,EAAM,KACrD,GAAC,mBACD,SAAM/H,EAAOoI,GACT,IAAM/I,EAAM,GACZ,IAAKW,EAAMqI,WAAW7e,KAAK6d,WACvB,MAAO,GACV,IAC2B,EAD3B,UACe7d,KAAKse,SAAO,IAA5B,IAAK,EAAL,qBAA8B,KAAnBQ,EAAC,SACHtI,EAAMgI,SAASM,EAAEvZ,YAClBgS,EAAAA,EAAAA,IAAYf,EAAMjR,SAAUuZ,EAAEvZ,UAAYuZ,EAAE5e,SAASuG,eACnDmY,GAASA,EAAME,EAAE5e,YAGvB2V,EAAI/M,KAAKgW,EAAE5e,SACf,CAAC,+BACD,GAAIF,KAAKqe,SAAU,KACa,EADb,UACGre,KAAKke,OAAK,IAA5B,IAAK,EAAL,qBAA8B,KAAnBQ,EAAG,QACV7I,EAAI/M,KAAI,MAAR+M,GAAG,OAAS6I,EAAIK,MAAMvI,EAAOoI,IACjC,CAAC,+BACL,CACA,OAAO/I,CACX,GAAC,yBACD,SAAYtQ,EAAU/E,EAAQoe,GAC1B,OAAO5e,KAAK+e,MAAM,IAAIC,EAAAA,GAAOzZ,EAASoM,EAAGpM,EAASsM,EAAGrR,GAASoe,EAClE,GAAC,4BACD,SAAerZ,EAAUb,EAAMka,GAC3B,OAAO5e,KAAK+e,MAAM,IAAIZ,EAAAA,GAAU5Y,EAASoM,EAAGpM,EAASsM,EAAGnN,EAAKmB,MAAOnB,EAAKoB,QAAS8Y,EACtF,KAAC,EAtDgB,GCKfK,EAAiB,SAAC/J,GACpB,IAAQpP,EAAkBoP,EAAlBpP,OAAQD,EAAUqP,EAAVrP,MAChB,OAAO,IAAIsY,EAAAA,IADuC,IACjBtY,GADiB,IACEC,EADkB,IACGD,EADH,IACuBC,EACjG,EACaoZ,EAAS,WAClB,WAAY1L,EAAQzT,GAAW,2BAC3BC,KAAKmf,WAAa,WAAkB,2BAAdpb,EAAS,yBAATA,EAAS,gBAC3B,IAAK,IAAL,MAAuBA,EAAS,eAAE,CAA7B,IAAM7D,EAAQ,KACf,EAAKkf,MAAMtW,KAAK5I,EACpB,CACJ,EACAF,KAAKqf,cAAgB,SAACtd,EAASud,EAAarF,GAAU,MAC5CsF,EAAgBxd,EAAQyd,OAC9B,GAA2B,QAAvB,EAACzd,EAAQyd,OAAOC,eAAO,OAAtB,EAAwBvb,OAA7B,CASA,IAAMwb,EAAgB,EAAKC,mBAAmBJ,EAAcE,SAAUG,EAAqBL,EAAc3f,MAAqBigB,EAAoBN,EAAcO,MAAMlgB,MAA3C,EAA8D2f,EAAcO,MAAMlgB,MAAQggB,EAAoBG,EAAkB9H,KAAK+H,IAAIJ,EAAoBC,GAAqBH,EAAgBJ,EAAaW,EAAiBhI,KAAK+H,IAAI,EAAKE,MAAO,EAAKC,QAAO,SAACC,GAAC,OAAKA,EAAEnG,QAAUA,CAAK,IAAE9V,aACxY9E,IAAV4a,EACA,EAAKoG,OAASd,EAAcO,MAAMlgB,MAAQ8f,EAG1C,EAAKY,aAAanN,IAAI8G,EAAOsF,EAAcO,MAAMlgB,MAAQ8f,GAEzDO,EAAiBF,EACjB,EAAKjX,KAAKmP,KAAKsI,IAAIR,EAAkBE,QAAiB5gB,EAAW0C,EAASkY,GAErEgG,EAAiBF,GACtB,EAAKS,eAAeP,EAAiBF,EAAiB9F,EAZ1D,WAPkB5a,IAAV4a,EACA,EAAKoG,OAASd,EAAcO,MAAMlgB,MAE7B2f,EAAcO,OACnB,EAAKQ,aAAanN,IAAI8G,EAAOsF,EAAcO,MAAMlgB,MAiB7D,EACAI,KAAK2f,mBAAqB,SAACc,GACvB,IAAM1gB,EAAY,EAAK2gB,WACvB,IAAK3gB,EAAUR,OAAOG,UAAY+gB,EAAevc,OAC7C,OAF+C,EAInD,IAAM3E,EAASQ,EAAUR,OAAOG,QAAS8J,EAAUzJ,EAAUuJ,OAAOG,WACpE,OAAQlK,EAAOsG,MAAQtG,EAAOuG,QAAW2a,EAAe3a,OAAS2a,EAAe5a,MAAQ,KAAH,IAAG2D,EA3C/D,GA4C7B,EACAxJ,KAAK2gB,cAAgB,SAACpb,EAAUyU,EAAiBC,EAAO2G,GACpD,IACI,IAAI1gB,EAAW,EAAKkf,MAAMyB,MACrB3gB,IACDA,EAAW,IAAI0U,EAAS,EAAKnB,QAAS,EAAKiN,aAE/CxgB,EAASqJ,KAAK,EAAKuX,QAASvb,EAAUyU,EAAiBC,GACvD,IAAI8G,GAAS,EAIb,GAHIH,IACAG,EAASH,EAAY1gB,KAEpB6gB,EACD,OAWJ,OATA,EAAKC,OAAOlY,KAAK5I,GACjB,EAAK+gB,QAAQnY,KAAK5I,GAClB,EAAK4gB,UACL,EAAKrN,QAAQkG,cAAc,gBAAiB,CACxC5Z,UAAW,EAAK2gB,WAChBtM,KAAM,CACFlU,SAAAA,KAGDA,CAIX,CAFA,MAAO4K,IACH3C,EAAAA,EAAAA,MAAY+Y,QAAQ,GAAD,OAAI5J,EAAAA,GAAW,6BAAqBxM,GAC3D,CACJ,EACA9K,KAAKmhB,gBAAkB,SAACC,EAAOnH,EAAOjB,GAClC,IAAM9Y,EAAW,EAAK8gB,OAAOI,GAC7B,IAAKlhB,GAAYA,EAAS+Z,QAAUA,EAChC,OAAO,EAEX,IAAMoH,EAAO,EAAKJ,QAAQK,QAAQphB,GAWlC,OAVA,EAAK8gB,OAAOO,OAAOH,EADwC,GAE3D,EAAKH,QAAQM,OAAOF,EAFuC,GAG3DnhB,EAASshB,QAAQxI,GACjB,EAAKvF,QAAQkG,cAAc,kBAAmB,CAC1C5Z,UAAW,EAAK2gB,WAChBtM,KAAM,CACFlU,SAAAA,KAGR,EAAKif,WAAWjf,IACT,CACX,EACAF,KAAKyT,QAAUD,EACfxT,KAAK0gB,WAAa3gB,EAClBC,KAAK8gB,QAAU,EACf9gB,KAAKghB,OAAS,GACdhhB,KAAKihB,QAAU,GACfjhB,KAAKof,MAAQ,GACbpf,KAAKqgB,OAAS,EACdrgB,KAAKsgB,aAAe,IAAIhN,IACxBtT,KAAKyhB,YAAa,EAClBzhB,KAAK0hB,YAAc,EACnB1hB,KAAK2hB,oBAAsB,IAAIpO,EAAmBC,EAAQzT,GAC1DC,KAAK4hB,qBAAsB,EAC3B,IAAM1M,EAAanV,EAAUR,OAAOmF,KACpC1E,KAAK6hB,SAAW,IAAIjE,EAASqB,EAAe/J,GAzG9B,GA0GdlV,KAAKsd,OAAS,GACdtd,KAAK+I,SAAW,EACpB,CAmNC,OAnNA,2BACD,WACI,OAAO/I,KAAKghB,OAAO7c,MACvB,GAAC,gCACD,WACI,IAC8C,EADxCpE,EAAYC,KAAK0gB,WAAY3e,EAAUhC,EAAUiC,cAAc,UAC9CD,EAAQ+f,iBAAe,IAA9C,IAAK,EAAL,qBAAgD,KAArC5hB,EAAQ,QACfF,KAAK+hB,YAAY7hB,EAASqF,UAAWoT,EAAAA,EAAAA,IAAYzY,EAASqF,SAAUxF,EAAUR,OAAOmF,WAAQrF,EAAWa,EAAS6B,QACrH,CAAC,+BACL,GAAC,yBACD,SAAYwD,EAAUyU,EAAiBC,EAAO2G,GAAa,MACjDoB,EAAehiB,KAAK0gB,WAAW1e,cAAc+B,UAAUyb,OAAOM,MAAOA,OAAkBzgB,IAAV4a,EAAsBja,KAAKqgB,OAAqC,QAA/B,EAAGrgB,KAAKsgB,aAAa/G,IAAIU,UAAM,QAAIja,KAAKqgB,OAAQ4B,EAAejiB,KAAKkgB,MACxL,GAAIJ,EADsM,EAEtM,GAA0B,WAAtBkC,EAAarW,KAAmB,CAChC,IAAqCuW,EAAgBD,EAAjC,EAA8DnC,EAC9EoC,EAD8B,GAE9BliB,KAAKwgB,eAAe0B,EAE5B,MACK,GAA0B,SAAtBF,EAAarW,MACdsW,GAAgBnC,EAChB,OAIZ,OAAO9f,KAAK2gB,cAAcpb,EAAUyU,EAAiBC,EAAO2G,EAChE,GAAC,mBACD,WACI5gB,KAAKghB,OAAS,GACdhhB,KAAKihB,QAAU,GACfjhB,KAAK4hB,qBAAsB,CAC/B,GAAC,qBACD,WACI5hB,KAAKghB,OAAS,GACdhhB,KAAKihB,QAAU,GACfjhB,KAAKsd,OAAS,GACdtd,KAAK+I,SAAW,EACpB,GAAC,kBACD,SAAKzC,GACD,IAAMvG,EAAYC,KAAK0gB,WAAYnhB,EAASQ,EAAUR,OACtDA,EAAO2G,QACPlG,KAAKmiB,OAAO7b,GAAO,IACuB,EADvB,UACMvG,EAAU8I,SAAO,IAA1C,IAAK,EAAL,qBAA4C,KAA9BxH,GAA8B,kBAAxB,GAChB9B,EAAOqI,WAAWvG,EAAQiF,EAC9B,CAAC,mCAC2B,EAD3B,UACetG,KAAKihB,SAAO,IAA5B,IAAK,EAAL,qBAA8B,CAAlB,QACNzc,KAAK8B,EACX,CAAC,+BACL,GAAC,oBACD,SAAO8b,GACH,OAAOpiB,KAAKghB,OAAOb,OAAOiC,EAC9B,GAAC,kBACD,SAAKA,GACD,OAAOpiB,KAAKghB,OAAOxU,KAAK4V,EAC5B,GAAC,iBACD,SAAIhB,GACA,OAAOphB,KAAKghB,OAAOI,EACvB,GAAC,6BACD,SAAgBzV,GACZ3L,KAAK2hB,oBAAoB/V,gBAAgBD,EAC7C,GAAC,2DACD,qHAG4B,OAFlB5L,EAAYC,KAAK0gB,WAAY3e,EAAUhC,EAAUiC,cACvDhC,KAAK0hB,YAAc,EACnB1hB,KAAKyhB,YAAa,EAAM,SAClBzhB,KAAKqI,cAAa,OACpB4I,GAAU,EAAK,UACMlR,EAAU8I,SAAO,yDAGrC,GAHqC,0BACCxJ,KAD7BgC,EAAM,MACLghB,0BACPpR,EAAU5P,EAAOghB,4BAEjBpR,EAAS,CAAF,2LAKf,GADAjR,KAAKsiB,sBACArR,EAAS,CAEV,IAAWgJ,KADLY,EAAmB9Y,EAAQgC,UAAWwe,EAAS1H,EAAiB0H,OAGlE,IADMC,EAAeD,EAAOtI,GACnB+D,EAAIhe,KAAKkgB,MAAOuC,EAAI,EAAGA,GAAuB,QAAtB,EAAGD,EAAahD,cAAM,aAAnB,EAAqB5f,QAASoe,EAAInD,EAAiB2E,OAAO5f,MAAOoe,IAAKyE,IACtGziB,KAAK+hB,iBAAY1iB,EAAWmjB,EAAcvI,GAGlD,IAAS+D,EAAIhe,KAAKkgB,MAAOlC,EAAInD,EAAiB2E,OAAO5f,MAAOoe,IACxDhe,KAAK+hB,aAEb,CAAC,gEACJ,kDA5BA,IA4BA,kEACD,mGACQ/hB,KAAK4hB,oBAAqB,CAAF,gDAGK,OAA3B7hB,EAAYC,KAAK0gB,WAAU,SACb1gB,KAAKyT,QAAQiP,UAAU3iB,GAAW,GAAK,OAAhD,OAAXC,KAAKsd,OAAS,EAAH,cACWtd,KAAKyT,QAAQkP,YAAY5iB,GAAW,GAAK,OAAlD,OAAbC,KAAK+I,SAAW,EAAH,eACP/I,KAAK2hB,oBAAoBpY,OAAM,kBACLxJ,EAAU6iB,gBAAc,IAAxD,IAAK,EAAL,qBAA0D,qBAA/B,KACTrZ,KAAKxJ,EACtB,gFACJ,kDAZA,IAYA,kBACD,SAAK8iB,EAAI3X,EAAO8O,EAAiBC,GAC7B,IAAK,IAAI+D,EAAI,EAAGA,EAAI6E,EAAI7E,IACpBhe,KAAK+hB,YAAiB,OAAL7W,QAAK,IAALA,OAAK,EAALA,EAAO3F,SAAUyU,EAAiBC,EAE3D,GAAC,6DACD,mFACiB,OAAbja,KAAKkG,QAAQ,SACPlG,KAAKuJ,OAAM,OACjBvJ,KAAKwE,KAAK,CAAE5E,MAAO,EAAGX,OAAQ,IAAK,gDACtC,kDALA,IAKA,oBACD,SAAOiB,EAAU+Z,EAAOjB,GACpBhZ,KAAK8iB,SAAS9iB,KAAKghB,OAAOM,QAAQphB,QAAWb,EAAW4a,EAAOjB,EACnE,GAAC,sBACD,SAASoI,GAA0D,IAAnD2B,EAAW,UAAH,6CA9NoC,EA8NV9I,EAAK,uCAAEjB,EAAQ,uCACvDgK,EAAW,EACjB,KAAI5B,EAAQ4B,GAAY5B,EAAQphB,KAAKkgB,OAIrC,IADA,IAAI+C,EAAU,EACLjF,EAAIoD,EAAO6B,EAAUF,GAAY/E,EAAIhe,KAAKkgB,MAAOlC,IAClDhe,KAAKmhB,gBAAgBnD,IAAK/D,EAAOjB,IACjCiK,GAGZ,GAAC,4BACD,SAAeF,EAAU9I,GAErBja,KAAK8iB,SADgB,EACOC,EAAU9I,EAC1C,GAAC,wBACD,WACI,IAAMlY,EAAU/B,KAAK0gB,WAAW1e,cAAeugB,EAASxgB,EAAQgC,UAAUwe,OAC1E,IAAK,IAAMtI,KAASsI,EAChBviB,KAAKqf,cAAckD,EAAOtI,GAFkE,EAE7CA,GAEnDja,KAAKqf,cAActd,EAAQgC,UAAWhC,EAAQ+f,gBAAgB3d,OAClE,GAAC,2BACD,SAAcqB,GACVxF,KAAK0hB,YAAclc,EACnBxF,KAAKyhB,WAAazhB,KAAKyhB,YAAczhB,KAAK0hB,YAAclc,CAC5D,GAAC,6BACD,SAAgBvG,GACZe,KAAKkjB,cAAgBjkB,CACzB,GAAC,oBACD,SAAOqH,GACH,IAAMvG,EAAYC,KAAK0gB,WAAYyC,EAAoB,IAAIC,IAC3DpjB,KAAK6hB,SAAW,IAAIjE,EAASqB,EAAelf,EAAUR,OAAOmF,MA9P/C,GA8PqE,IAC3B,EAD2B,UACnD3E,EAAU6iB,gBAAc,IAAxD,IAAK,EAAL,qBAA0D,oBAA/B,GACTT,QAClB,CAAC,mCACyC,EADzC,UACwBpiB,EAAU8I,SAAO,IAA1C,IAAK,EAAL,qBAA4C,OAA9BxH,GAA8B,kBAAxB,GACH,QAAb,EAAAA,EAAO8gB,cAAM,OAAb,OAAA9gB,EAAgBiF,EACpB,CAAC,+BACD,IACkC,EAD5B+c,EAAerjB,KAAKkjB,cAAc,UACjBljB,KAAKghB,QAAM,IAAlC,IAAK,EAAL,qBAAoC,KAAzB9gB,EAAQ,QACXmjB,IAAiBnjB,EAASya,qBAC1Bza,EAASqF,SAASoM,GAAK0R,EAAaxd,MACpC3F,EAASqF,SAASsM,GAAKwR,EAAavd,OACpC5F,EAASuY,gBAAgB9G,GAAK0R,EAAaxd,MAC3C3F,EAASuY,gBAAgB5G,GAAKwR,EAAavd,QAE/C5F,EAASya,oBAAqB,EAC9B3a,KAAK2hB,oBAAoB1N,MAAM/T,GAAU,IACO,EADP,UAChBF,KAAK0gB,WAAW7X,SAAO,IAAhD,IAAK,EAAL,qBAAkD,OAApCxH,GAAoC,kBAA9B,GAChB,GAAInB,EAASsG,UACT,MAEiB,QAArB,EAAAnF,EAAOiiB,sBAAc,OAArB,OAAAjiB,EAAwBnB,EAAUoG,EACtC,CAAC,mCAC8B,EAD9B,UACmBtG,KAAKsd,QAAM,IAA/B,IAAK,EAAL,qBAAiC,KAAtBC,EAAK,QACRA,EAAMzJ,UAAU5T,IAChBqd,EAAMvZ,KAAK9D,EAAUoG,EAE7B,CAAC,+BACGpG,EAASsG,UACT2c,EAAkB9Y,IAAInK,GAG1BF,KAAK6hB,SAASlD,OAAO,IAAIhB,EAAMzd,EAASyY,cAAezY,GAC3D,CAAC,+BACD,GAAIijB,EAAkBze,KAAM,CACxB,IAAM6e,EAAc,SAACzE,GAAC,OAAMqE,EAAkBK,IAAI1E,EAAE,EACpD9e,KAAKghB,OAAShhB,KAAKmgB,OAAOoD,GAC1BvjB,KAAKihB,QAAUjhB,KAAKihB,QAAQd,OAAOoD,GAAa,IACR,EADQ,UACzBJ,GAAiB,IAAxC,IAAK,EAAL,qBAA0C,KAA/BjjB,EAAQ,QACfF,KAAKyT,QAAQkG,cAAc,kBAAmB,CAC1C5Z,UAAWC,KAAK0gB,WAChBtM,KAAM,CACFlU,SAAAA,IAGZ,CAAC,+BACDF,KAAKmf,WAAU,MAAfnf,MAAI,OAAemjB,GACvB,CACAnjB,KAAK2hB,oBAAoB8B,iBAAiBnd,GAAO,IACf,EADe,UAC1BtG,KAAKghB,QAAM,IAAlC,IAAK,EAAL,qBAAoC,KACG,EAD5B9gB,EAAQ,kBACOF,KAAK+I,UAAQ,IAAnC,IAAK,EAAL,qBAAqC,CAAnB,QACNoZ,OAAOjiB,EAAUoG,EAC7B,CAAC,+BACIpG,EAASsG,WAActG,EAASqG,UACjCvG,KAAK2hB,oBAAoB+B,kBAAkBxjB,EAAUoG,EAE7D,CAAC,+BAED,UADOtG,KAAKkjB,cACRljB,KAAKyhB,WAAY,CACjB,IAAMkC,EAAS3jB,KAAKihB,QACpB0C,EAAOC,MAAK,SAACrhB,EAAGshB,GAAC,OAAKA,EAAEte,SAASsU,EAAItX,EAAEgD,SAASsU,GAAKtX,EAAEwX,GAAK8J,EAAE9J,EAAE,IAEhE/Z,KAAK0hB,YAAciC,EAAOA,EAAOxf,OADZ,GACmCoB,SAASsU,EACjE7Z,KAAKyhB,YAAa,CACtB,CACJ,KAAC,EA1TiB,GCTTqC,EAAM,WACf,WAAY/jB,IAAW,eACnBC,KAAKD,UAAYA,EACjBC,KAAKyJ,WAJQ,EAKbzJ,KAAK+jB,aALiC,CAM1C,CAwBC,OAxBA,4BACD,WACI,IAAMhkB,EAAYC,KAAKD,UAAWgC,EAAUhC,EAAUiC,cACtDhC,KAAKyJ,YAAc1H,EAAQiiB,eAAgBC,EAAAA,EAAAA,MAT9B,EASuDzU,OAAO0U,iBAC3ElkB,KAAK+jB,aAViC,EAWtC,IAAMI,EAAQnkB,KAAKyJ,WAAYlK,EAASQ,EAAUR,OAClD,GAAIA,EAAOG,QAAS,CAChB,IAAMA,EAAUH,EAAOG,QACvBH,EAAOmF,KAAKmB,MAAQnG,EAAQ0J,YAAc+a,EAC1C5kB,EAAOmF,KAAKoB,OAASpG,EAAQyJ,aAAegb,CAChD,CACA,IAAMpgB,EAAYhC,EAAQgC,UAAWkS,EAAclS,EAAUC,KAC7DhE,KAAKokB,UAAWhO,EAAAA,EAAAA,IAAcH,EAAYoO,QAAQD,UAAYD,EAC9DnkB,KAAKskB,oBAAqBlO,EAAAA,EAAAA,IAAcrS,EAAUW,KAAK6f,UAAU1N,OAASsN,CAC9E,GAAC,0BACD,SAAajkB,GACT,IAAM6B,EAAU7B,EAAS6B,QAASoiB,EAAQnkB,KAAKyJ,WAAYwM,EAAclU,EAAQiC,KAAMwgB,EAAevO,EAAYwO,SAAUC,EAAQxkB,EAASoJ,OAC7Iob,EAAMC,WAAYvO,EAAAA,EAAAA,IAAcH,EAAY2O,OAAST,EACrDO,EAAMG,WAAYzO,EAAAA,EAAAA,IAAcH,EAAYY,OAASsN,EACrDO,EAAMJ,oBAAqBlO,EAAAA,EAAAA,IAAcrU,EAAQ2C,KAAK6f,UAAU1N,OAASsN,EACzE,IAAMzJ,EAAcgK,EAAMhK,YAC1BA,EAAY7C,gBAAyCxY,IAA5BmlB,EAAa3M,WAA2B2M,EAAa3M,WAAasM,OAAQ9kB,EACnGqb,EAAY5C,cAAqCzY,IAA1BmlB,EAAa1M,SAAyB0M,EAAa1M,SAAWqM,OAAQ9kB,EAC7FqlB,EAAMN,UAAWhO,EAAAA,EAAAA,IAAcH,EAAYoO,QAAQD,UAAYD,CACnE,KAAC,EA7Bc,GCMnB,SAASW,EAAW/kB,GAChB,OAAOA,IAAcA,EAAUyG,SACnC,CACA,IAAMue,EAAa,GAOnB,SAASC,EAAqBxR,EAAQzT,GACa,IAA/C,IAAMgC,EAAU,IAAIkjB,EAAAA,EAAQzR,EAAQzT,GAAW,mBADCmlB,EAAgB,iCAAhBA,EAAgB,kBAGhE,OADAC,EAAAA,EAAAA,WAAY,EAAD,CAACpjB,GAAO,OAAKmjB,IACjBnjB,CACX,CACO,IAAMqjB,EAAS,WAClB,WAAY5R,EAAQuG,EAAIsL,GAAe,2BACnCrlB,KAAKslB,qBAAuB,SAAC7U,GACzB,GAAKqU,EAAW,IAAU,EAAK9iB,cAAcujB,uBAA7C,CAEC,IAC0B,EAD1B,UACmB9U,GAAO,IAA3B,IAAK,EAAL,qBAA6B,KAAlB+U,EAAK,QACRA,EAAM9U,SAAW,EAAKzF,cAAcvL,UAGpC8lB,EAAMC,eACD,EAAKtY,OAGV,EAAKF,QAEb,CAAC,+BAXD,CAYJ,EACAjN,KAAK0lB,WAAa,SAACC,GACf,IAAI,MACA,IAAK,EAAKC,cACkBvmB,IAAxB,EAAKwmB,gBACLF,EAAY,EAAKE,eAAiBnY,EAAAA,GAAwB,EAAKoY,SAE/D,YADA,EAAKthB,MAAK,GAGK,QAAnB,IAAKqhB,sBAAc,QAAnB,EAAKA,eAAmBF,GACxB,IAAMrf,EAtCtB,SAAmB1G,GAA8C,IAAvCkmB,EAAW,UAAH,6CAAGf,EAAYgB,EAAS,UAAH,8CACnD,MAAO,CACHnmB,MAAAA,EACAX,OAAQ8mB,EAAShB,EAAae,EAAYf,EAAanlB,EAAS8N,EAAAA,GAExE,CAiC8BsY,CAAUL,EAAY,EAAKE,eAAgB,EAAKC,SAAU,EAAKF,SAG7E,GAFA,EAAKK,YAAY3f,EAAM1G,OACvB,EAAKimB,eAAiBF,EAClBrf,EAAM1G,MAAQ8N,EAAAA,GAEd,YADA,EAAKlJ,MAAK,GAId,GADA,EAAKT,UAAUS,KAAK8B,IACf,EAAK4f,QAEN,YADA,EAAK1E,UAGL,EAAKtU,iBACL,EAAK1I,MAAK,EAKlB,CAFA,MAAOsG,IACH3C,EAAAA,EAAAA,MAAY9E,MAAM,GAAD,OAAIiU,EAAAA,GAAW,sBAAsBxM,EAC1D,CACJ,EACA9K,KAAKyT,QAAUD,EACfxT,KAAK+Z,GAAKoM,OAAOpM,GACjB/Z,KAAK8lB,SAAW,IAChB9lB,KAAK4lB,SAAU,EACf5lB,KAAKomB,OAAS,EACdpmB,KAAKqmB,UAAY,EACjBrmB,KAAKsmB,UAAY,EACjBtmB,KAAKumB,aAAc,EACnBvmB,KAAK4J,SAAU,EACf5J,KAAKwG,WAAY,EACjBxG,KAAKwmB,SAAU,EACfxmB,KAAK6lB,eAAiB,EACtB7lB,KAAKwY,QAAU,IACfxY,KAAKgN,YAAa,EAClBhN,KAAKymB,eAAiBpB,EACtBrlB,KAAK0mB,sBAAwBrB,EAC7BrlB,KAAKsJ,OAAS,IAAIwa,EAAO9jB,MACzBA,KAAKT,OAAS,IAAIO,EAAOE,MACzBA,KAAK+D,UAAY,IAAImb,EAAUlf,KAAKyT,QAASzT,MAC7CA,KAAK4iB,eAAiB,IAAItP,IAC1BtT,KAAKiL,cAAgB,CACjBC,MAAO,CACH2F,UAAU,EACVG,QAAQ,IAGhBhR,KAAK6I,QAAU,IAAIyK,IACnBtT,KAAK8c,cAAgB,IAAIxJ,IACzBtT,KAAKsZ,aAAe,IAAIhG,IACxBtT,KAAK2mB,SAAW3B,EAAqBhlB,KAAKyT,QAASzT,MACnDA,KAAKgC,cAAgBgjB,EAAqBhlB,KAAKyT,QAASzT,MACxDA,KAAK4mB,gBAAkB,IAAIhc,EAAe5K,MAC1CA,KAAK6mB,uBAAwBC,EAAAA,EAAAA,KAAyB,SAACrW,GAAO,OAAK,EAAK6U,qBAAqB7U,EAAQ,IACrGzQ,KAAKyT,QAAQkG,cAAc,iBAAkB,CAAE5Z,UAAWC,MAC9D,CAoVC,OApVA,qCACD,WACI,OAAQA,KAAKwmB,UAAYxmB,KAAKgN,YAAc8X,EAAW9kB,KAC3D,GAAC,mBACD,WACI,OAAOA,KAAK2mB,QAChB,GAAC,yBACD,WACI,OAAO3mB,KAAKymB,cAChB,GAAC,6BACD,SAAgBphB,GAAU,WACtB,GAAKyf,EAAW9kB,MAAhB,CAGA,IAAM+mB,EAAK/mB,KAAKiL,cAAcvL,QAC9B,GAAKqnB,EAAL,CAGA,IAAMC,EAAsB,SAAClc,EAAGwG,EAAK9Q,GACjC,GAAKskB,EAAW,GAAhB,CAGA,IAAMtb,EAAU,EAAKF,OAAOG,WAAYwd,EAAY,CAChDtV,EAAGL,EAAIK,EAAInI,EACXqI,EAAGP,EAAIO,EAAIrI,GACZzF,EAAY,EAAKA,UAAU8d,SAASqF,YAAYD,EAAWzmB,EAASgJ,GACvEnE,EAASyF,EAAG/G,EALZ,CAMJ,EAsDIojB,GAAU,EAAOC,GAAa,EAClCL,EAAG7jB,iBAAiB,SAtDC,SAAC4H,GAClB,GAAKga,EAAW,GAAhB,CAGA,IAAMtT,EAAa1G,EAAGwG,EAAM,CACxBK,EAAGH,EAAWY,SAAWZ,EAAWI,QACpCC,EAAGL,EAAWa,SAAWb,EAAWM,SAExCkV,EAAoBlc,EAAGwG,EADX,EAJZ,CAMJ,IA8CAyV,EAAG7jB,iBAAiB,cA7CM,WACjB4hB,EAAW,KAGhBqC,GAAU,EACVC,GAAa,EACjB,IAwCAL,EAAG7jB,iBAAiB,aAvCK,WAChB4hB,EAAW,KAGhBsC,GAAa,EACjB,IAmCAL,EAAG7jB,iBAAiB,YAlCI,SAAC4H,GACrB,GAAKga,EAAW,GAAhB,CAGA,GAAIqC,IAAYC,EAAY,CACxB,IAAM9U,EAAaxH,EAEfyH,EAAYD,EAAWE,QAAQF,EAAWE,QAAQrO,OADjC,GAErB,IAAKoO,KACDA,EAAYD,EAAWM,eAAeN,EAAWM,eAAezO,OAH/C,IAKb,OAGR,IAAMzE,EAAU,EAAKH,OAAOG,QAASyS,EAAazS,EAAUA,EAAQgS,6BAA0BrS,EAA8BiS,EAAM,CAC9HK,EAAGY,EAAUX,SAAWO,EAAaA,EAAWvM,KADqE,GAErHiM,EAAGU,EAAUT,SAAWK,EAAaA,EAAWxM,IAFqE,IAIzHqhB,EAAoBlc,EAAGwG,EAAK2G,KAAKoP,IAAI9U,EAAU+U,QAAS/U,EAAUgV,SACtE,CACAJ,GAAU,EACVC,GAAa,CAlBb,CAmBJ,IAaAL,EAAG7jB,iBAAiB,eAZO,WAClB4hB,EAAW,KAGhBqC,GAAU,EACVC,GAAa,EACjB,GA/DA,CAJA,CA0EJ,GAAC,yBACD,SAAYxnB,GACRI,KAAKsmB,WAAa1mB,CACtB,GAAC,qBACD,SAAQT,EAAK+c,GAA6B,IAAlBlD,EAAW,UAAH,8CAC5B,SAAK8L,EAAW9kB,QAAWgZ,GAAYhZ,KAAK4iB,eAAeY,IAAIrkB,MAG/Da,KAAK4iB,eAAezP,IAAIhU,EAAK+c,IACtB,EACX,GAAC,mBACD,WACI,OAAQlc,KAAKqmB,WAAarmB,KAAKsmB,WAAatmB,KAAKqmB,SACrD,GAAC,qBACD,WAAU,WACN,GAAKvB,EAAW9kB,MAAhB,CAGAA,KAAKmG,OACLnG,KAAK+D,UAAUyd,UACfxhB,KAAKT,OAAOiiB,UAAU,IAC2B,EAD3B,UACSxhB,KAAK8c,eAAa,IAAjD,IAAK,EAAL,qBAAmD,OAArCD,GAAqC,kBAAzB,GACF,QAApB,EAAAA,EAAa2E,eAAO,OAApB,OAAA3E,EAAuB7c,KAC3B,CAAC,mCAC8C,EAD9C,UAC6BA,KAAKsZ,cAAY,IAA/C,IAAK,EAAL,qBAAiD,OAAnCD,GAAmC,kBAAxB,GACF,QAAnB,EAAAA,EAAYmI,eAAO,OAAnB,OAAAnI,EAAsBrZ,KAC1B,CAAC,mCAC0C,EAD1C,UACiBA,KAAK8c,cAAc0K,QAAM,IAA3C,IAAK,EAAL,qBAA6C,KAAlCroB,EAAG,QACVa,KAAK8c,cAAc/J,OAAO5T,EAC9B,CAAC,mCACyC,EADzC,UACiBa,KAAKsZ,aAAakO,QAAM,IAA1C,IAAK,EAAL,qBAA4C,KAAjCroB,EAAG,QACVa,KAAKsZ,aAAavG,OAAO5T,EAC7B,CAAC,+BACDa,KAAKyT,QAAQgU,aAAaznB,MAC1BA,KAAKwG,WAAY,EACjB,IAAMkhB,EAAU1nB,KAAKyT,QAAQkU,MAAOC,EAAMF,EAAQG,WAAU,SAACzH,GAAC,OAAKA,IAAM,CAAI,IAC7E,GAAIwH,GADuF,EACtE,CAEjBF,EAAQnG,OAAOqG,EADK,EAExB,CACA5nB,KAAKyT,QAAQkG,cAAc,qBAAsB,CAAE5Z,UAAWC,MAvB9D,CAwBJ,GAAC,kBACD,SAAK8nB,GAAO,WACR,GAAKhD,EAAW9kB,MAAhB,CAGA,IAAI+nB,EAAcD,EAQlB9nB,KAAKgoB,oBAAsBC,uBAAsB,SAACtC,GAAS,OAP7C,SAACA,GACPoC,IACA,EAAKlC,oBAAiBxmB,EACtB0oB,GAAc,GAElB,EAAKrC,WAAWC,EACpB,CACgEuC,CAAMvC,EAAU,GAThF,CAUJ,GAAC,6DACD,WAAa1d,GAAI,kGAAElG,EAAU,EAAH,6BAAG,CAAC,EAAC,UACF/B,KAAK6I,SAAO,yDAAjB,GAAiB,sBAAvBxH,EAAM,MACJ8mB,OAAQ,CAAF,sEAGA9mB,EAAO8mB,OAAOlgB,EAAMlG,GAAQ,QAArC,IAAH8T,EAAM,EAAH,MACAuS,UAAW,CAAF,gFAGXvS,EAAIwS,MAAI,gJAEnBlgB,EAAAA,EAAAA,MAAY9E,MAAM,GAAD,OAAIiU,EAAAA,GAAW,sCAA8BrP,EAAI,eAAc,gEACnF,mDAbA,IAaA,6BACD,SAAgB0D,GACZ,GAAKmZ,EAAW9kB,MAAhB,CAGAA,KAAK+D,UAAU6H,gBAAgBD,GAAM,IACA,EADA,UACZ3L,KAAK6I,SAAO,IAArC,IAAK,EAAL,qBAAuC,OAAzBxH,GAAyB,kBAAnB,GACM,QAAtB,EAAAA,EAAOuK,uBAAe,OAAtB,OAAAvK,EAAyBsK,EAC7B,CAAC,+BAJD,CAKJ,GAAC,2DACD,kKACSmZ,EAAW9kB,MAAO,CAAF,gDAGfsoB,EAAUtoB,KAAKyT,QAAQ8U,sBAAqB,UAC/BD,GAAO,IAA1B,IAAK,EAAL,qBAAWrgB,EAAI,SACLugB,EAASxoB,KAAKyT,QAAQsJ,gBAAgB9U,KAExCjI,KAAK8c,cAAc3J,IAAIlL,EAAMugB,EAEpC,+BACKC,EAASzoB,KAAKyT,QAAQiV,qBAAoB,UAC7BD,GAAM,IAAzB,IAAK,EAAL,qBAAWxgB,EAAI,SACLugB,EAASxoB,KAAKyT,QAAQwJ,eAAehV,KAEvCjI,KAAKsZ,aAAanG,IAAIlL,EAAMugB,EAEnC,gDACKxoB,KAAK+D,UAAUsE,cAAa,QAE2C,OAD7ErI,KAAK2mB,SAAW3B,EAAqBhlB,KAAKyT,QAASzT,KAAMA,KAAK0mB,sBAAuB1mB,KAAKqlB,eAC1FrlB,KAAKgC,cAAgBgjB,EAAqBhlB,KAAKyT,QAASzT,KAAMA,KAAK2mB,UAAU,UAC9C3mB,KAAKyT,QAAQkV,oBAAoB3oB,MAAK,QAA/D4oB,EAAmB,EAAH,eACKA,GAAgB,IAA3C,IAAK,EAAL,qBAA6C,qBAAjC7O,EAAE,KAAE1Y,EAAM,KAClBrB,KAAK6I,QAAQsK,IAAI4G,EAAI1Y,EACxB,+BACkB,OAAnBrB,KAAKsJ,OAAOC,OAAO,UACbvJ,KAAKT,OAAOgK,OAAM,QACxBvJ,KAAK+J,sBACL/J,KAAKT,OAAO0F,iBACZjF,KAAKT,OAAO+B,SACZtB,KAAKwY,QAAUxY,KAAKgC,cAAcwW,QAClCxY,KAAKqmB,WAAYjQ,EAAAA,EAAAA,IAAcpW,KAAKgC,cAAc6mB,UAAYnb,EAAAA,GAC9D1N,KAAKomB,QAAShQ,EAAAA,EAAAA,IAAcpW,KAAKgC,cAAcyL,OAASC,EAAAA,GACxD1N,KAAKsmB,UAAY,EACO,IAAmB,EAC3CtmB,KAAK8lB,SAAW9lB,KAAKgC,cAAc8jB,SADQ,EACiB9lB,KAAKgC,cAAc8jB,SADvD,IAExB9lB,KAAK4lB,QAAU5lB,KAAKgC,cAAc+jB,OAAO,UAChB/lB,KAAK8c,eAAa,2DAAvB,OAAuB,qBAA7B0L,EAAM,eACC,QADD,EACVA,EAAOjf,YAAI,aAAX,OAAAif,EAAcxoB,MAAK,2JAEJA,KAAKsZ,cAAY,2DAAtB,OAAsB,qBAA5BkP,EAAM,eACC,QADD,EACVA,EAAOjf,YAAI,aAAX,OAAAif,EAAcxoB,MAAK,2JAEJA,KAAK6I,SAAO,2DAAjB,OAAiB,qBAAvBxH,EAAM,eACC,QADD,EACVA,EAAOkI,YAAI,aAAX,OAAAlI,GAAe,iJAEwC,OAAjErB,KAAKyT,QAAQkG,cAAc,gBAAiB,CAAE5Z,UAAWC,OAAQ,UAC3DA,KAAK+D,UAAUwF,OAAM,QAC3BvJ,KAAK+D,UAAUiG,aAAa,UACHhK,KAAK6I,SAAO,IAArC,IAAK,EAAL,qBAAuC,qBAAzBxH,EAAM,KACK,QAArB,EAAAA,EAAOynB,sBAAc,OAArB,OAAAznB,EACH,+BACDrB,KAAKyT,QAAQkG,cAAc,iBAAkB,CAAE5Z,UAAWC,OAAQ,6FACrE,kDAtDA,IAsDA,gEACD,WAAgByM,GAAI,yEACXqY,EAAW9kB,MAAO,CAAF,gDAGK,OAA1BA,KAAK+oB,cAAgBtc,EAAK,SACpBzM,KAAKiK,UAAS,gDACvB,mDAPA,IAOA,mBACD,WACI,GAAK6a,EAAW9kB,aAGiBX,IAA7BW,KAAKgoB,sBACLgB,qBAAqBhpB,KAAKgoB,4BACnBhoB,KAAKgoB,sBAEZhoB,KAAKwmB,SAAT,CAEC,IACoC,EADpC,UACwBxmB,KAAK6I,SAAO,IAArC,IAAK,EAAL,qBAAuC,OAAzBxH,GAAyB,kBAAnB,GACJ,QAAZ,EAAAA,EAAO4L,aAAK,OAAZ,OAAA5L,EACJ,CAAC,+BACIrB,KAAKgN,aACNhN,KAAKwmB,SAAU,GAEnBxmB,KAAKyT,QAAQkG,cAAc,kBAAmB,CAAE5Z,UAAWC,MAP3D,CAQJ,GAAC,kBACD,SAAK8nB,GACD,GAAKhD,EAAW9kB,MAAhB,CAGA,IAAMipB,EAAcjpB,KAAKwmB,SAAWsB,EACpC,IAAI9nB,KAAKumB,aAAgBvmB,KAAKgC,cAAcknB,SAA5C,CAOA,GAHIlpB,KAAKwmB,UACLxmB,KAAKwmB,SAAU,GAEfyC,EAAa,KACwB,EADxB,UACYjpB,KAAK6I,SAAO,IAArC,IAAK,EAAL,qBAAuC,KAAzBxH,GAAyB,kBAAnB,GACZA,EAAO8L,MACP9L,EAAO8L,MAEf,CAAC,+BACL,CACAnN,KAAKyT,QAAQkG,cAAc,gBAAiB,CAAE5Z,UAAWC,OACzDA,KAAKwE,KAAgB,OAAXykB,QAAW,IAAXA,GAAAA,EAZV,MAFIjpB,KAAKumB,aAAc,CAHvB,CAkBJ,GAAC,8DACD,sFACSzB,EAAW9kB,MAAO,CAAF,gDAGT,OAAZA,KAAKmG,OAAO,kBACLnG,KAAKmpB,SAAO,gDACtB,kDAPA,IAOA,4DACD,sFACSrE,EAAW9kB,MAAO,CAAF,gDAKwD,OAF7EA,KAAK0mB,2BAAwBrnB,EAC7BW,KAAK2mB,SAAW3B,EAAqBhlB,KAAKyT,QAASzT,MACnDA,KAAKgC,cAAgBgjB,EAAqBhlB,KAAKyT,QAASzT,KAAMA,KAAK2mB,UAAU,kBACtE3mB,KAAKiK,WAAS,gDACxB,kDATA,IASA,4DACD,iGACS6a,EAAW9kB,QAASA,KAAK4J,QAAO,iEAG/B5J,KAAKuJ,OAAM,OACG,OAApBvJ,KAAK4J,SAAU,EAAK,SACd,IAAIjH,SAAQ,SAACC,GACf,IAAMumB,EAAK,yCAAG,iGACV,EAAKvC,gBAAgBwC,eACjB,EAAKne,cAAcvL,mBAAmB2pB,aAAe,EAAKxC,uBAC1D,EAAKA,sBAAsB3hB,QAAQ,EAAK+F,cAAcvL,SACzD,UACwB,EAAKmJ,SAAO,yDAAjB,OAAiB,qBAAvBxH,EAAM,cACE,QADF,EACVA,EAAO8nB,aAAK,aAAZ,OAAA9nB,GAAgB,8IAE1B,EAAKoS,QAAQkG,cAAc,mBAAoB,CAAE5Z,UAAW,IAC5D,EAAKoN,OACLvK,IAAU,gEACb,kBAXU,mCAYX,EAAK0mB,cAAgBzd,YAAW,WAAWsd,GAAO,GAAE,EAAK/C,OAC7D,IAAE,gDACL,kDAtBA,IAsBA,kBACD,WACI,GAAKtB,EAAW9kB,OAAUA,KAAK4J,QAA/B,CAGI5J,KAAKspB,gBACLhc,aAAatN,KAAKspB,sBACXtpB,KAAKspB,eAEhBtpB,KAAKumB,aAAc,EACnBvmB,KAAK4J,SAAU,EACf5J,KAAK4mB,gBAAgB2C,kBACrBvpB,KAAKiN,QACLjN,KAAK+D,UAAUmC,QACflG,KAAKT,OAAO4G,OACRnG,KAAKiL,cAAcvL,mBAAmB2pB,aAAerpB,KAAK6mB,uBAC1D7mB,KAAK6mB,sBAAsBrW,UAAUxQ,KAAKiL,cAAcvL,SAC3D,IACoC,EADpC,UACwBM,KAAK6I,SAAO,IAArC,IAAK,EAAL,qBAAuC,OAAzBxH,GAAyB,kBAAnB,GACL,QAAX,EAAAA,EAAO8E,YAAI,OAAX,OAAA9E,EACJ,CAAC,mCACoC,EADpC,UACiBrB,KAAK6I,QAAQ2e,QAAM,IAArC,IAAK,EAAL,qBAAuC,KAA5BroB,EAAG,QACVa,KAAK6I,QAAQkK,OAAO5T,EACxB,CAAC,+BACDa,KAAKymB,eAAiBzmB,KAAK2mB,SAC3B3mB,KAAKyT,QAAQkG,cAAc,mBAAoB,CAAE5Z,UAAWC,MArB5D,CAsBJ,GAAC,iCACD,WACIA,KAAKgC,cAAcwnB,WAAa,GAChC,IAAMC,EAAczpB,KAAKgC,cAAc0nB,cAAc1pB,KAAKT,OAAOmF,KAAKmB,MAAO7F,KAAKsJ,OAAOG,WAAYzJ,KAAK2mB,UAE1G,OADA3mB,KAAKgC,cAAc2nB,SAAS3pB,KAAK+oB,eAC7B/oB,KAAK4pB,sBAAwBH,IAGjCzpB,KAAK4pB,oBAAsBH,GACpB,EACX,KAAC,EAraiB,E","sources":["../node_modules/@tsparticles/engine/browser/Core/Canvas.js","../node_modules/@tsparticles/engine/browser/Core/Utils/EventListeners.js","../node_modules/@tsparticles/engine/browser/Core/Utils/InteractionManager.js","../node_modules/@tsparticles/engine/browser/Core/Particle.js","../node_modules/@tsparticles/engine/browser/Core/Utils/Point.js","../node_modules/@tsparticles/engine/browser/Core/Utils/QuadTree.js","../node_modules/@tsparticles/engine/browser/Core/Particles.js","../node_modules/@tsparticles/engine/browser/Core/Retina.js","../node_modules/@tsparticles/engine/browser/Core/Container.js"],"sourcesContent":["import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils.js\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils.js\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { generatedAttribute } from \"./Utils/Constants.js\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key], defaultValue = 1;\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? defaultValue) * newValue;\n    }\n}\nfunction setStyle(canvas, style, important = false) {\n    if (!style) {\n        return;\n    }\n    const element = canvas;\n    if (!element) {\n        return;\n    }\n    const elementStyle = element.style;\n    if (!elementStyle) {\n        return;\n    }\n    for (const key in style) {\n        const value = style[key];\n        if (!value) {\n            continue;\n        }\n        elementStyle.setProperty(key, value, important ? \"important\" : \"\");\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw?.(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw?.(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize?.();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = async () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color;\n            if (color) {\n                const coverRgb = rangeColorToRgb(color);\n                if (coverRgb) {\n                    const coverColor = {\n                        ...coverRgb,\n                        a: cover.opacity,\n                    };\n                    this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n                }\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!cover.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._coverImage = {\n                            image: img,\n                            opacity: cover.opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = cover.image;\n                });\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            const factorNumerator = 1, opacity = factorNumerator / trail.length;\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            setStyle(element, originalStyle);\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const radix = 10;\n            setStyle(element, {\n                position: \"fixed\",\n                zIndex: this.container.actualOptions.fullScreen.zIndex.toString(radix),\n                top: \"0\",\n                left: \"0\",\n                width: \"100%\",\n                height: \"100%\",\n            }, true);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill, minimumLength = 0;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > minimumLength && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else if (options.clear) {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element?.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawAsync(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return undefined;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius(), minimumSize = 0;\n        if (radius <= minimumSize) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zIndexFactorOffset = 1, zIndexFactor = zIndexFactorOffset - particle.zIndexFactor, zOpacityFactor = zIndexFactor ** zIndexOptions.opacityRate, defaultOpacity = 1, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? defaultOpacity, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * zIndexFactor ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        await this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor ?? plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles ?? updater.getTransformValues ?? updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                if (this._coverImage) {\n                    this._paintImage(this._coverImage.image, this._coverImage.opacity);\n                }\n                else if (this._coverColorStyle) {\n                    this._paintBase(this._coverColorStyle);\n                }\n                else {\n                    this._paintBase();\n                }\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            container.particles.setResizeFactor({\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            });\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { millisecondsToSeconds, mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants.js\";\nimport { isBoolean } from \"../../Utils/TypeUtils.js\";\nconst double = 2;\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                const touchDelay = 500;\n                setTimeout(() => this._mouseTouchFinish(), touchDelay);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n            if (theme && theme.default.auto) {\n                void container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document && document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.animationStatus) {\n                    void container.play(true);\n                }\n                else {\n                    void container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            const handleResize = async () => {\n                const canvas = this.container.canvas;\n                await canvas?.windowResize();\n            };\n            this._resizeTimeout = setTimeout(() => void handleResize(), this.container.actualOptions.interactivity.events.resize.delay * millisecondsToSeconds);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver((entries) => {\n                    const entry = entries.find((e) => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity?.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + double * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + double * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lengthOffset = 1, lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset], canvasRect = canvasEl.getBoundingClientRect(), defaultCoordinate = 0;\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? defaultCoordinate),\n                        y: lastTouch.clientY - (canvasRect.top ?? defaultCoordinate),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = [];\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        this._interactors = await this._engine.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.interact(particle, delta);\n            }\n        }\n    }\n    reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.reset(particle);\n            }\n        }\n    }\n}\n","import { Vector, Vector3d } from \"./Utils/Vectors.js\";\nimport { calcExactPositionOrRandomFromSize, clamp, degToRad, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils.js\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils.js\";\nimport { errorPrefix, millisecondsToSeconds } from \"./Utils/Constants.js\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity.js\";\nimport { alterHsl } from \"../Utils/CanvasUtils.js\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils.js\";\nconst defaultRetryCount = 0, double = 2, half = 0.5, squareExp = 2;\nfunction loadEffectData(effect, effectOptions, id, reduceDuplicates) {\n    const effectData = effectOptions.options[effect];\n    if (!effectData) {\n        return;\n    }\n    return deepExtend({\n        close: effectOptions.close,\n        fill: effectOptions.fill,\n    }, itemFromSingleOrMultiple(effectData, id, reduceDuplicates));\n}\nfunction loadShapeData(shape, shapeOptions, id, reduceDuplicates) {\n    const shapeData = shapeOptions.options[shape];\n    if (!shapeData) {\n        return;\n    }\n    return deepExtend({\n        close: shapeOptions.close,\n        fill: shapeOptions.fill,\n    }, itemFromSingleOrMultiple(shapeData, id, reduceDuplicates));\n}\nfunction fixOutMode(data) {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * double;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n}\nexport class Particle {\n    constructor(engine, container) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = defaultRetryCount) => {\n            for (const [, plugin] of container.plugins) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\"],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\"],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                const increment = 1;\n                return this._calcPosition(container, undefined, zIndex, tryCount + increment);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n                return res;\n            }\n            const rad = degToRad(getRangeValue(moveOptions.angle.value)), radOffset = degToRad(getRangeValue(moveOptions.angle.offset)), range = {\n                left: radOffset - rad * half,\n                right: radOffset + rad * half,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = defaultRetryCount) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries, minRetries = 0;\n            if (retries >= minRetries && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find((particle) => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = (color) => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const rollFactor = 1, none = 0, backFactor = this.roll.horizontal && this.roll.vertical ? double * rollFactor : rollFactor, backSum = this.roll.horizontal ? Math.PI * half : none, rolled = Math.floor(((this.roll.angle ?? none) + backSum) / (Math.PI / backFactor)) % double;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = (position) => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value), minZ = 0;\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, minZ, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size, defaultRadius = 0;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? defaultRadius,\n                mode: this.options.move.center.mode ?? \"percent\",\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case \"inside\":\n                    this.outType = \"inside\";\n                    break;\n                case \"outside\":\n                    this.outType = \"outside\";\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._engine = engine;\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator, shapeDrawer = container.shapeDrawers.get(this.shape);\n        shapeDrawer?.particleDestroy?.(this);\n        for (const [, plugin] of container.plugins) {\n            plugin.particleDestroyed?.(this, override);\n        }\n        for (const updater of container.particles.updaters) {\n            updater.particleDestroyed?.(this, override);\n        }\n        pathGenerator?.reset(this);\n        this._engine.dispatchEvent(\"particleDestroyed\", {\n            container: this.container,\n            data: {\n                particle: this,\n            },\n        });\n    }\n    draw(delta) {\n        const container = this.container, canvas = container.canvas;\n        for (const [, plugin] of container.plugins) {\n            canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return this.getRadius() ** squareExp * Math.PI * half;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.effectClose = true;\n        this.effectFill = true;\n        this.shapeClose = true;\n        this.shapeFill = true;\n        this.pathRotation = false;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), effectType = particlesOptions.effect.type, shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.effect = itemFromSingleOrMultiple(effectType, this.id, reduceDuplicates);\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const effectOptions = particlesOptions.effect, shapeOptions = particlesOptions.shape;\n        if (overrideOptions) {\n            if (overrideOptions.effect?.type) {\n                const overrideEffectType = overrideOptions.effect.type, effect = itemFromSingleOrMultiple(overrideEffectType, this.id, reduceDuplicates);\n                if (effect) {\n                    this.effect = effect;\n                    effectOptions.load(overrideOptions.effect);\n                }\n            }\n            if (overrideOptions.shape?.type) {\n                const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n                if (shape) {\n                    this.shape = shape;\n                    shapeOptions.load(overrideOptions.shape);\n                }\n            }\n        }\n        this.effectData = loadEffectData(this.effect, effectOptions, this.id, reduceDuplicates);\n        this.shapeData = loadShapeData(this.shape, shapeOptions, this.id, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const effectData = this.effectData;\n        if (effectData) {\n            particlesOptions.load(effectData.particles);\n        }\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.effectFill = effectData?.fill ?? particlesOptions.effect.fill;\n        this.effectClose = effectData?.close ?? particlesOptions.effect.close;\n        this.shapeFill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.shapeClose = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getRangeValue(pathOptions.delay.value) * millisecondsToSeconds;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        const decayOffset = 1;\n        this.moveDecay = decayOffset - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.setLastZIndex(this.position.z);\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let effectDrawer = container.effectDrawers.get(this.effect);\n        if (!effectDrawer) {\n            effectDrawer = this._engine.getEffectDrawer(this.effect);\n            if (effectDrawer) {\n                container.effectDrawers.set(this.effect, effectDrawer);\n            }\n        }\n        if (effectDrawer?.loadEffect) {\n            effectDrawer.loadEffect(this);\n        }\n        let shapeDrawer = container.shapeDrawers.get(this.shape);\n        if (!shapeDrawer) {\n            shapeDrawer = this._engine.getShapeDrawer(this.shape);\n            if (shapeDrawer) {\n                container.shapeDrawers.set(this.shape, shapeDrawer);\n            }\n        }\n        if (shapeDrawer?.loadShape) {\n            shapeDrawer.loadShape(this);\n        }\n        const sideCountFunc = shapeDrawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of particles.movers) {\n            mover.init?.(this);\n        }\n        effectDrawer?.particleInit?.(container, this);\n        shapeDrawer?.particleInit?.(container, this);\n        for (const [, plugin] of container.plugins) {\n            plugin.particleCreated?.(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset?.(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","import { Circle, Rectangle } from \"./Ranges.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nconst half = 0.5, double = 2, subdivideCount = 4;\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < subdivideCount; i++) {\n                const fixedIndex = i % double;\n                this._subs.push(new QuadTree(new Rectangle(x + width * half * fixedIndex, y + height * half * (Math.round(i * half) - fixedIndex), width * half, height * half), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) => sub.insert(point));\n    }\n    query(range, check) {\n        const res = [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                res.push(...sub.query(range, check));\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils.js\";\nimport { InteractionManager } from \"./Utils/InteractionManager.js\";\nimport { Particle } from \"./Particle.js\";\nimport { Point } from \"./Utils/Point.js\";\nimport { QuadTree } from \"./Utils/QuadTree.js\";\nimport { Rectangle } from \"./Utils/Ranges.js\";\nimport { errorPrefix } from \"./Utils/Constants.js\";\nconst qTreeCapacity = 4, squareExp = 2, defaultRemoveQuantity = 1;\nconst qTreeRectangle = (canvasSize) => {\n    const { height, width } = canvasSize, posOffset = -0.25, sizeFactor = 1.5;\n    return new Rectangle(posOffset * width, posOffset * height, sizeFactor * width, sizeFactor * height);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._addToPool = (...particles) => {\n            for (const particle of particles) {\n                this._pool.push(particle);\n            }\n        };\n        this._applyDensity = (options, manualCount, group) => {\n            const numberOptions = options.number;\n            if (!options.number.density?.enable) {\n                if (group === undefined) {\n                    this._limit = numberOptions.limit.value;\n                }\n                else if (numberOptions.limit) {\n                    this._groupLimits.set(group, numberOptions.limit.value);\n                }\n                return;\n            }\n            const densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, minLimit = 0, optParticlesLimit = numberOptions.limit.value > minLimit ? numberOptions.limit.value : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\n            if (group === undefined) {\n                this._limit = numberOptions.limit.value * densityFactor;\n            }\n            else {\n                this._groupLimits.set(group, numberOptions.limit.value * densityFactor);\n            }\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) => {\n            const container = this._container, defaultFactor = 1;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return defaultFactor;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.height * densityOptions.width * pxRatio ** squareExp);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this._pool.pop();\n                if (!particle) {\n                    particle = new Particle(this._engine, this._container);\n                }\n                particle.init(this._nextId, position, overrideOptions, group);\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            const zIdx = this._zArray.indexOf(particle), deleteCount = 1;\n            this._array.splice(index, deleteCount);\n            this._zArray.splice(zIdx, deleteCount);\n            particle.destroy(override);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            this._addToPool(particle);\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this._pool = [];\n        this._limit = 0;\n        this._groupLimits = new Map();\n        this._needsSort = false;\n        this._lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        this._pluginsInitialized = false;\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = [];\n        this.updaters = [];\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const limitOptions = this._container.actualOptions.particles.number.limit, limit = group === undefined ? this._limit : this._groupLimits.get(group) ?? this._limit, currentCount = this.count, minLimit = 0;\n        if (limit > minLimit) {\n            if (limitOptions.mode === \"delete\") {\n                const countOffset = 1, minCount = 0, countToRemove = currentCount + countOffset - limit;\n                if (countToRemove > minCount) {\n                    this.removeQuantity(countToRemove);\n                }\n            }\n            else if (limitOptions.mode === \"wait\") {\n                if (currentCount >= limit) {\n                    return;\n                }\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n        this._pluginsInitialized = false;\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    draw(delta) {\n        const container = this._container, canvas = container.canvas;\n        canvas.clear();\n        this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    get(index) {\n        return this._array[index];\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions;\n        this._lastZIndex = 0;\n        this._needsSort = false;\n        await this.initPlugins();\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this.addManualParticles();\n        if (!handled) {\n            const particlesOptions = options.particles, groups = particlesOptions.groups;\n            for (const group in groups) {\n                const groupOptions = groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < particlesOptions.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < particlesOptions.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    async initPlugins() {\n        if (this._pluginsInitialized) {\n            return;\n        }\n        const container = this._container;\n        this.movers = await this._engine.getMovers(container, true);\n        this.updaters = await this._engine.getUpdaters(container, true);\n        await this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n    }\n    async redraw() {\n        this.clear();\n        await this.init();\n        this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = defaultRemoveQuantity, group, override) {\n        const minIndex = 0;\n        if (index < minIndex || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            if (this._removeParticle(i--, group, override)) {\n                deleted++;\n            }\n        }\n    }\n    removeQuantity(quantity, group) {\n        const defaultIndex = 0;\n        this.removeAt(defaultIndex, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups, manualCount = 0;\n        for (const group in groups) {\n            this._applyDensity(groups[group], manualCount, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    setLastZIndex(zIndex) {\n        this._lastZIndex = zIndex;\n        this._needsSort = this._needsSort || this._lastZIndex < zIndex;\n    }\n    setResizeFactor(factor) {\n        this._resizeFactor = factor;\n    }\n    update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.update?.(delta);\n        }\n        const resizeFactor = this._resizeFactor;\n        for (const particle of this._array) {\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                plugin.particleUpdate?.(particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            for (const particle of particlesToDelete) {\n                this._engine.dispatchEvent(\"particleRemoved\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n            }\n            this._addToPool(...particlesToDelete);\n        }\n        this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete this._resizeFactor;\n        if (this._needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            const lengthOffset = 1;\n            this._lastZIndex = zArray[zArray.length - lengthOffset].position.z;\n            this._needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { isSsr } from \"../Utils/Utils.js\";\nconst defaultRatio = 1, defaultReduceFactor = 1;\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = defaultRatio;\n        this.reduceFactor = defaultReduceFactor;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? defaultRatio : window.devicePixelRatio;\n        this.reduceFactor = defaultReduceFactor;\n        const ratio = this.pixelRatio, canvas = container.canvas;\n        if (canvas.element) {\n            const element = canvas.element;\n            canvas.size.width = element.offsetWidth * ratio;\n            canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { errorPrefix, millisecondsToSeconds } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nconst defaultFps = 60;\nfunction initDelta(value, fpsLimit = defaultFps, smooth = false) {\n    return {\n        value,\n        factor: smooth ? defaultFps / fpsLimit : (defaultFps * value) / millisecondsToSeconds,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                if (entry.isIntersecting) {\n                    void this.play();\n                }\n                else {\n                    this.pause();\n                }\n            }\n        };\n        this._nextFrame = (timestamp) => {\n            try {\n                if (!this._smooth &&\n                    this._lastFrameTime !== undefined &&\n                    timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this._lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n                this.addLifeTime(delta.value);\n                this._lastFrameTime = timestamp;\n                if (delta.value > millisecondsToSeconds) {\n                    this.draw(false);\n                    return;\n                }\n                this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.animationStatus) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.id = Symbol(id);\n        this.fpsLimit = 120;\n        this._smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this._lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        this._intersectionObserver = safeIntersectionObserver((entries) => this._intersectionManager(entries));\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get animationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            }, radius = 1;\n            clickOrTouchHandler(e, pos, radius);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                const lengthOffset = 1;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - lengthOffset];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, minCoordinate = 0, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, effectDrawer] of this.effectDrawers) {\n            effectDrawer.destroy?.(this);\n        }\n        for (const [, shapeDrawer] of this.shapeDrawers) {\n            shapeDrawer.destroy?.(this);\n        }\n        for (const key of this.effectDrawers.keys()) {\n            this.effectDrawers.delete(key);\n        }\n        for (const key of this.shapeDrawers.keys()) {\n            this.shapeDrawers.delete(key);\n        }\n        this._engine.clearPlugins(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this), minIndex = 0;\n        if (idx >= minIndex) {\n            const deleteCount = 1;\n            mainArr.splice(idx, deleteCount);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        const frame = (timestamp) => {\n            if (refreshTime) {\n                this._lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            this._nextFrame(timestamp);\n        };\n        this._drawAnimationFrame = requestAnimationFrame((timestamp) => frame(timestamp));\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const effects = this._engine.getSupportedEffects();\n        for (const type of effects) {\n            const drawer = this._engine.getEffectDrawer(type);\n            if (drawer) {\n                this.effectDrawers.set(type, drawer);\n            }\n        }\n        const shapes = this._engine.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.getShapeDrawer(type);\n            if (drawer) {\n                this.shapeDrawers.set(type, drawer);\n            }\n        }\n        await this.particles.initPlugins();\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = await this._engine.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * millisecondsToSeconds;\n        this._delay = getRangeValue(this.actualOptions.delay) * millisecondsToSeconds;\n        this._lifeTime = 0;\n        const defaultFpsLimit = 120, minFpsLimit = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > minFpsLimit ? this.actualOptions.fpsLimit : defaultFpsLimit;\n        this._smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.effectDrawers) {\n            await drawer.init?.(this);\n        }\n        for (const [, drawer] of this.shapeDrawers) {\n            await drawer.init?.(this);\n        }\n        for (const [, plugin] of this.plugins) {\n            await plugin.init?.();\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        await this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup?.();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause?.();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate ?? false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            const start = async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    await plugin.start?.();\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            };\n            this._delayTimeout = setTimeout(() => void start(), this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop?.();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this._responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this._responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n"],"names":["setTransformValue","factor","newFactor","key","newValue","undefined","setStyle","canvas","style","important","element","elementStyle","value","setProperty","Canvas","container","this","_applyPostDrawUpdaters","particle","_postDrawUpdaters","updater","afterDraw","_applyPreDrawUpdaters","ctx","radius","zOpacity","colorStyles","transform","_preDrawUpdaters","getColorStyles","fill","stroke","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","_resizePlugins","plugin","resize","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","rangeColorToHsl","particleStrokeColor","_initCover","options","actualOptions","cover","backgroundMask","color","coverRgb","rangeColorToRgb","coverColor","a","opacity","_coverColorStyle","getStyleFromRgb","Promise","resolve","reject","image","img","document","createElement","addEventListener","_coverImage","evt","error","src","_initStyle","_fullScreen","_originalStyle","deepExtend","_setFullScreenStyle","_resetOriginalStyle","_initTrail","trail","particles","move","trailFill","enable","length","fillColor","_trailFill","_paintBase","baseColor","draw","paintBase","size","_paintImage","paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","observe","attributes","originalStyle","callback","_mutationObserver","position","zIndex","fullScreen","toString","top","left","width","height","_context","_generated","paint","clear","stop","remove","cb","delta","spawning","destroyed","getRadius","pfColor","getFillColor","psColor","getStrokeColor","zIndexOptions","zIndexFactor","zOpacityFactor","opacityRate","bubble","zStrokeOpacity","strokeOpacity","getStyleFromHsl","drawParticle","context","composite","sizeRate","shadow","drawParticlePlugin","drawPlugin","obs","safeMutationObserver","records","record","type","attributeName","getLogger","initUpdaters","initPlugins","background","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","plugins","push","updaters","dataset","generatedAttribute","ariaHidden","offsetHeight","offsetWidth","getContext","retina","init","pxRatio","pixelRatio","newSize","oldSize","started","setResizeFactor","needsRefresh","updateActualOptions","setDensity","refresh","manageListener","event","handler","add","addOptions","passive","isBoolean","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","e","_canPush","mouseInteractivity","interactivity","mouse","mousePos","clickPosition","clickTime","Date","getTime","onClick","events","executeOnSingleOrMultiple","mode","handleClickMode","setTimeout","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","matches","dark","light","theme","themes","find","name","default","auto","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","pageHidden","pause","animationStatus","play","_handleWindowResize","_resizeTimeout","clearTimeout","handleResize","windowResize","delay","millisecondsToSeconds","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","onHover","mouseMoveEvent","mouseMove","touchStartEvent","touchStart","touchMoveEvent","touchMove","touchEndEvent","touchEndClick","mouseUpEvent","mouseUp","mouseDownEvent","mouseDown","touchEnd","mouseLeave","touchCancelEvent","touchCancel","_manageListeners","detectType","detectsOn","mouseLeaveEvent","window","mouseOutEvent","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChangeEvent","visibilityChange","mediaMatch","safeMatchMedia","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","_resizeObserver","unobserve","entries","target","resizeEvent","_mouseDown","clicking","downPosition","_mouseTouchClick","inside","handled","mousePosition","clickPositionValid","status","_mouseTouchMove","pos","startsWith","mouseEvent","clientRect","getBoundingClientRect","x","clientX","y","clientY","source","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","touchEvent","lastTouch","touches","_touchEnd","Array","from","changedTouches","touch","_touches","delete","identifier","_touchEndClick","_touchStart","set","performance","now","Map","InteractionManager","engine","_engine","_interactors","_externalInteractors","_particleInteractors","interactor","isEnabled","interact","getInteractors","reset","half","fixOutMode","data","isInArray","outMode","checkModes","diameter","coord","maxCoord","setCb","Particle","_calcPosition","tryCount","pluginPos","particlePosition","Vector3d","canvasSize","exactPosition","calcExactPositionOrRandomFromSize","outModes","fixHorizontal","fixVertical","right","bottom","_checkOverlap","increment","_calculateVelocity","res","getParticleBaseVelocity","direction","copy","moveOptions","rad","degToRad","getRangeValue","angle","radOffset","offset","range","straight","randomInRange","setRangeValue","random","speed","getRandom","collisionsOptions","collisions","overlapOptions","overlap","retries","minRetries","Error","errorPrefix","getDistance","_getRollColor","roll","backColor","alter","backFactor","horizontal","vertical","double","backSum","Math","PI","floor","alterHsl","_initPosition","zIndexValue","clamp","zLayers","initialPosition","moveCenter","getPosition","center","getParticleDirectionAngle","outType","Vector","override","unbreakable","inRange","slow","pathGenerator","shapeDrawer","shapeDrawers","get","shape","particleDestroy","particleDestroyed","dispatchEvent","getHslFromAnimation","z","strokeColor","id","overrideOptions","group","effectClose","effectFill","shapeClose","shapeFill","pathRotation","lastPathTime","rotation","misplaced","maxDistance","ignoresResizeRatio","mainOptions","particlesOptions","loadParticlesOptions","effectType","effect","shapeType","reduceDuplicates","itemFromSingleOrMultiple","effectOptions","shapeOptions","overrideEffectType","load","overrideShapeType","effectData","close","loadEffectData","shapeData","loadShapeData","Interactivity","pathOptions","path","pathDelay","generator","getPathGenerator","addPath","initParticle","initParticleNumericAnimationValue","initialVelocity","velocity","moveDecay","decay","setLastZIndex","sides","effectDrawer","effectDrawers","getEffectDrawer","loadEffect","getShapeDrawer","loadShape","sideCountFunc","getSidesCount","shadowColor","movers","mover","particleInit","particleCreated","isInsideCanvas","Point","QuadTree","rectangle","capacity","_subdivide","i","fixedIndex","_subs","Rectangle","round","_divided","_points","point","contains","some","sub","insert","check","intersects","p","query","Circle","qTreeRectangle","Particles","_addToPool","_pool","_applyDensity","manualCount","numberOptions","number","density","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","limit","particlesNumber","min","particlesCount","count","filter","t","_limit","_groupLimits","abs","removeQuantity","densityOptions","_container","_pushParticle","initializer","pop","_nextId","canAdd","_array","_zArray","warning","_removeParticle","index","zIdx","indexOf","splice","destroy","_needsSort","_lastZIndex","_interactionManager","_pluginsInitialized","quadTree","manualParticles","addParticle","limitOptions","currentCount","countToRemove","update","condition","particlesInitialization","addManualParticles","groups","groupOptions","j","getMovers","getUpdaters","pathGenerators","nb","removeAt","quantity","minIndex","deleted","_resizeFactor","particlesToDelete","Set","resizeFactor","particleUpdate","checkDelete","has","externalInteract","particlesInteract","zArray","sort","b","Retina","reduceFactor","detectRetina","isSsr","devicePixelRatio","ratio","maxSpeed","gravity","sizeAnimationSpeed","animation","moveDistance","distance","props","moveDrift","drift","moveSpeed","guardCheck","defaultFps","loadContainerOptions","Options","sourceOptionsArr","loadOptions","Container","sourceOptions","_intersectionManager","pauseOnOutsideViewport","entry","isIntersecting","_nextFrame","timestamp","_smooth","_lastFrameTime","fpsLimit","smooth","initDelta","addLifeTime","alive","Symbol","_delay","_duration","_lifeTime","_firstStart","_paused","_sourceOptions","_initialSourceOptions","_options","_eventListeners","_intersectionObserver","safeIntersectionObserver","el","clickOrTouchHandler","posRetina","queryCircle","touched","touchMoved","max","radiusX","radiusY","keys","clearPlugins","mainArr","dom","idx","findIndex","force","refreshTime","_drawAnimationFrame","requestAnimationFrame","frame","export","supported","blob","effects","getSupportedEffects","drawer","shapes","getSupportedShapes","getAvailablePlugins","availablePlugins","duration","particlesSetup","_currentTheme","cancelAnimationFrame","needsUpdate","autoPlay","start","addListeners","HTMLElement","_delayTimeout","removeListeners","responsive","newMaxWidth","setResponsive","setTheme","_responsiveMaxWidth"],"sourceRoot":""}