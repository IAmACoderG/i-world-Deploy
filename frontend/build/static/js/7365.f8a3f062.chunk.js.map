{"version":3,"file":"static/js/7365.f8a3f062.chunk.js","mappings":"8KACaA,EAAI,WACb,cAAc,eACVC,KAAKC,SAAW,IAChBD,KAAKE,MAAQ,IAAIC,EAAAA,CACrB,CASC,OATA,4BACD,SAAKC,GACIA,SAGiBC,IAAlBD,EAAKH,WACLD,KAAKC,SAAWG,EAAKH,UAEzBD,KAAKE,MAAMI,KAAKF,EAAKF,OACzB,KAAC,EAbY,E,yFCAJC,EAAS,WAClB,cAAc,eACVH,KAAKO,OAAQ,EACbP,KAAKQ,SAAU,EACfR,KAAKS,QAAU,CACnB,CAiBC,OAjBA,4BACD,SAAKL,GACIA,SAGcC,IAAfD,EAAKG,QACLP,KAAKO,MAAQH,EAAKG,YAEHF,IAAfD,EAAKM,QACLV,KAAKU,MAAQC,EAAAA,GAAAA,OAAoBX,KAAKU,MAAON,EAAKM,aAEjCL,IAAjBD,EAAKI,UACLR,KAAKQ,QAAUJ,EAAKI,cAEHH,IAAjBD,EAAKK,UACLT,KAAKS,QAAUL,EAAKK,SAE5B,KAAC,EAtBiB,E,iMCDf,SAAeG,EAA4B,GAAD,+BAKhD,8CALM,WAA2CC,GAAM,wFAAgB,OAAdC,IAAU,EAAH,+BAAO,SAC9DD,EAAOE,cAAc,eAAc,yCAAE,WAAOC,GAAS,8FAC7B,+BAAsB,OAAjC,OAAiC,SAAxCC,EAAO,EAAPA,QAAO,kBACR,IAAIA,EAAQD,IAAU,2CAChC,mDAHwC,GAGtCF,GAAQ,2CACd,wB","sources":["../node_modules/@tsparticles/interaction-external-grab/browser/Options/Classes/Grab.js","../node_modules/@tsparticles/interaction-external-grab/browser/Options/Classes/GrabLinks.js","../node_modules/@tsparticles/interaction-external-grab/browser/index.js"],"sourcesContent":["import { GrabLinks } from \"./GrabLinks.js\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links);\n    }\n}\n","import { OptionsColor } from \"@tsparticles/engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","export async function loadExternalGrabInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalGrab\", async (container) => {\n        const { Grabber } = await import(\"./Grabber.js\");\n        return new Grabber(container);\n    }, refresh);\n}\nexport * from \"./Options/Classes/Grab.js\";\nexport * from \"./Options/Classes/GrabLinks.js\";\nexport * from \"./Options/Interfaces/IGrab.js\";\nexport * from \"./Options/Interfaces/IGrabLinks.js\";\n"],"names":["Grab","this","distance","links","GrabLinks","data","undefined","load","blink","consent","opacity","color","OptionsColor","loadExternalGrabInteraction","engine","refresh","addInteractor","container","Grabber"],"sourceRoot":""}